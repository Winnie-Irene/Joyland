<!DOCTYPE html>
<!-- saved from url=(0030)https://sweetalert2.github.io/ -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <title>SweetAlert2 - a beautiful, responsive, customizable and accessible (WAI-ARIA) replacement for JavaScript's popup boxes</title>
  <meta name="description" content="SweetAlert2 - a beautiful, responsive, customizable and accessible (WAI-ARIA) replacement for JavaScript&#39;s popup boxes">

  
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="icon" type="image/x-icon" href="https://sweetalert2.github.io/images/favicon.png">

  <!-- Open Graph / Facebook -->
  <meta property="og:title" content="SweetAlert2">
  <meta property="og:description" content="SweetAlert2 - a beautiful, responsive, customizable and accessible (WAI-ARIA) replacement for JavaScript&#39;s popup boxes">
  <meta property="og:image" content="http://sweetalert2.github.io/images/sweetalert2-social.png">
  <meta property="og:url" content="https://sweetalert2.github.io/">

  <!-- Twitter -->
  <meta name="twitter:title" content="SweetAlert2">
  <meta name="twitter:description" content="SweetAlert2 - a beautiful, responsive, customizable and accessible (WAI-ARIA) replacement for JavaScript&#39;s popup boxes">
  <meta name="twitter:image" content="https://sweetalert2.github.io/images/sweetalert2-social.png">
  <meta name="twitter:card" content="summary_large_image">

  <link rel="icon" href="https://sweetalert2.github.io/images/favicon.png">

  <!-- https://goo.gl/qRE0vM -->
  <meta name="theme-color" content="#f2f4f6">


  <!-- Font Awesome icons -->
  <link rel="stylesheet" href="./sweetalert2.min_files/font-awesome.min.css">

  <!-- Animate.css -->
  <link rel="stylesheet" href="./sweetalert2.min_files/animate.min.css">

  <!-- Google tag (gtag.js) -->
  <script async="" src="./sweetalert2.min_files/js"></script>
  <script>
    window.dataLayer = window.dataLayer || []
    function gtag() {
      dataLayer.push(arguments)
    }
    gtag('js', new Date())

    gtag('config', 'G-N6JLWRHB89')
  </script>
  <!-- Google tag end -->
  <script type="module" crossorigin="" src="./sweetalert2.min_files/main-D2bt5Wyb.js.download"></script>
  <link rel="modulepreload" crossorigin="" href="https://sweetalert2.github.io/assets/index-Cg0Jp0AV.js">
  <link rel="stylesheet" crossorigin="" href="./sweetalert2.min_files/index-CNNNiuuM.css">
<style>:root{--swal2-container-padding: 0.625em;--swal2-backdrop: rgba(0, 0, 0, 0.4);--swal2-width: 32em;--swal2-padding: 0 0 1.25em;--swal2-border: none;--swal2-border-radius: 0.3125rem;--swal2-background: white;--swal2-color: #545454;--swal2-footer-border-color: #eee;--swal2-show-animation: swal2-show 0.3s;--swal2-hide-animation: swal2-hide 0.15s forwards;--swal2-input-background: transparent;--swal2-progress-step-background: #add8e6;--swal2-validation-message-background: #f0f0f0;--swal2-validation-message-color: #666;--swal2-close-button-position: initial;--swal2-close-button-inset: auto;--swal2-close-button-font-size: 2.5em;--swal2-close-button-color: #ccc}[data-swal2-theme=dark]{--swal2-dark-theme-black: #19191a;--swal2-dark-theme-white: #e1e1e1;--swal2-background: var(--swal2-dark-theme-black);--swal2-color: var(--swal2-dark-theme-white);--swal2-footer-border-color: #555;--swal2-input-background: color-mix(in srgb, var(--swal2-dark-theme-black), var(--swal2-dark-theme-white) 10%);--swal2-validation-message-background: color-mix( in srgb, var(--swal2-dark-theme-black), var(--swal2-dark-theme-white) 10% );--swal2-validation-message-color: var(--swal2-dark-theme-white)}@media(prefers-color-scheme: dark){[data-swal2-theme=auto]{--swal2-dark-theme-black: #19191a;--swal2-dark-theme-white: #e1e1e1;--swal2-background: var(--swal2-dark-theme-black);--swal2-color: var(--swal2-dark-theme-white);--swal2-footer-border-color: #555;--swal2-input-background: color-mix(in srgb, var(--swal2-dark-theme-black), var(--swal2-dark-theme-white) 10%);--swal2-validation-message-background: color-mix( in srgb, var(--swal2-dark-theme-black), var(--swal2-dark-theme-white) 10% );--swal2-validation-message-color: var(--swal2-dark-theme-white)}}body.swal2-shown:not(.swal2-no-backdrop,.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto !important}body.swal2-no-backdrop .swal2-container{background-color:rgba(0,0,0,0) !important;pointer-events:none}body.swal2-no-backdrop .swal2-container .swal2-popup{pointer-events:all}body.swal2-no-backdrop .swal2-container .swal2-modal{box-shadow:0 0 10px var(--swal2-backdrop)}body.swal2-toast-shown .swal2-container{box-sizing:border-box;width:360px;max-width:100%;background-color:rgba(0,0,0,0);pointer-events:none}body.swal2-toast-shown .swal2-container.swal2-top{inset:0 auto auto 50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{inset:0 0 auto auto}body.swal2-toast-shown .swal2-container.swal2-top-start,body.swal2-toast-shown .swal2-container.swal2-top-left{inset:0 auto auto 0}body.swal2-toast-shown .swal2-container.swal2-center-start,body.swal2-toast-shown .swal2-container.swal2-center-left{inset:50% auto auto 0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{inset:50% auto auto 50%;transform:translate(-50%, -50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{inset:50% 0 auto auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-start,body.swal2-toast-shown .swal2-container.swal2-bottom-left{inset:auto auto 0 0}body.swal2-toast-shown .swal2-container.swal2-bottom{inset:auto auto 0 50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{inset:auto 0 0 auto}@media print{body.swal2-shown:not(.swal2-no-backdrop,.swal2-toast-shown){overflow-y:scroll !important}body.swal2-shown:not(.swal2-no-backdrop,.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop,.swal2-toast-shown) .swal2-container{position:static !important}}div:where(.swal2-container){display:grid;position:fixed;z-index:1060;inset:0;box-sizing:border-box;grid-template-areas:"top-start     top            top-end" "center-start  center         center-end" "bottom-start  bottom-center  bottom-end";grid-template-rows:minmax(min-content, auto) minmax(min-content, auto) minmax(min-content, auto);height:100%;padding:var(--swal2-container-padding);overflow-x:hidden;transition:background-color .1s;-webkit-overflow-scrolling:touch}div:where(.swal2-container).swal2-backdrop-show,div:where(.swal2-container).swal2-noanimation{background:var(--swal2-backdrop)}div:where(.swal2-container).swal2-backdrop-hide{background:rgba(0,0,0,0) !important}div:where(.swal2-container).swal2-top-start,div:where(.swal2-container).swal2-center-start,div:where(.swal2-container).swal2-bottom-start{grid-template-columns:minmax(0, 1fr) auto auto}div:where(.swal2-container).swal2-top,div:where(.swal2-container).swal2-center,div:where(.swal2-container).swal2-bottom{grid-template-columns:auto minmax(0, 1fr) auto}div:where(.swal2-container).swal2-top-end,div:where(.swal2-container).swal2-center-end,div:where(.swal2-container).swal2-bottom-end{grid-template-columns:auto auto minmax(0, 1fr)}div:where(.swal2-container).swal2-top-start>.swal2-popup{align-self:start}div:where(.swal2-container).swal2-top>.swal2-popup{grid-column:2;place-self:start center}div:where(.swal2-container).swal2-top-end>.swal2-popup,div:where(.swal2-container).swal2-top-right>.swal2-popup{grid-column:3;place-self:start end}div:where(.swal2-container).swal2-center-start>.swal2-popup,div:where(.swal2-container).swal2-center-left>.swal2-popup{grid-row:2;align-self:center}div:where(.swal2-container).swal2-center>.swal2-popup{grid-column:2;grid-row:2;place-self:center center}div:where(.swal2-container).swal2-center-end>.swal2-popup,div:where(.swal2-container).swal2-center-right>.swal2-popup{grid-column:3;grid-row:2;place-self:center end}div:where(.swal2-container).swal2-bottom-start>.swal2-popup,div:where(.swal2-container).swal2-bottom-left>.swal2-popup{grid-column:1;grid-row:3;align-self:end}div:where(.swal2-container).swal2-bottom>.swal2-popup{grid-column:2;grid-row:3;place-self:end center}div:where(.swal2-container).swal2-bottom-end>.swal2-popup,div:where(.swal2-container).swal2-bottom-right>.swal2-popup{grid-column:3;grid-row:3;place-self:end end}div:where(.swal2-container).swal2-grow-row>.swal2-popup,div:where(.swal2-container).swal2-grow-fullscreen>.swal2-popup{grid-column:1/4;width:100%}div:where(.swal2-container).swal2-grow-column>.swal2-popup,div:where(.swal2-container).swal2-grow-fullscreen>.swal2-popup{grid-row:1/4;align-self:stretch}div:where(.swal2-container).swal2-no-transition{transition:none !important}div:where(.swal2-container) div:where(.swal2-popup){display:none;position:relative;box-sizing:border-box;grid-template-columns:minmax(0, 100%);width:var(--swal2-width);max-width:100%;padding:var(--swal2-padding);border:var(--swal2-border);border-radius:var(--swal2-border-radius);background:var(--swal2-background);color:var(--swal2-color);font-family:inherit;font-size:1rem}div:where(.swal2-container) div:where(.swal2-popup):focus{outline:none}div:where(.swal2-container) div:where(.swal2-popup).swal2-loading{overflow-y:hidden}div:where(.swal2-container) div:where(.swal2-popup).swal2-draggable{cursor:grab}div:where(.swal2-container) div:where(.swal2-popup).swal2-draggable div:where(.swal2-icon){cursor:grab}div:where(.swal2-container) div:where(.swal2-popup).swal2-dragging{cursor:grabbing}div:where(.swal2-container) div:where(.swal2-popup).swal2-dragging div:where(.swal2-icon){cursor:grabbing}div:where(.swal2-container) h2:where(.swal2-title){position:relative;max-width:100%;margin:0;padding:.8em 1em 0;color:inherit;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word;cursor:initial}div:where(.swal2-container) div:where(.swal2-actions){display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:center;width:auto;margin:1.25em auto 0;padding:0}div:where(.swal2-container) div:where(.swal2-actions):not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}div:where(.swal2-container) div:where(.swal2-actions):not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1))}div:where(.swal2-container) div:where(.swal2-actions):not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2))}div:where(.swal2-container) div:where(.swal2-loader){display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 rgba(0,0,0,0) #2778c4 rgba(0,0,0,0)}div:where(.swal2-container) button:where(.swal2-styled){margin:.3125em;padding:.625em 1.1em;transition:box-shadow .1s;box-shadow:0 0 0 3px rgba(0,0,0,0);font-weight:500}div:where(.swal2-container) button:where(.swal2-styled):not([disabled]){cursor:pointer}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-confirm){border:0;border-radius:.25em;background:initial;background-color:#7066e0;color:#fff;font-size:1em}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-confirm):focus-visible{box-shadow:0 0 0 3px rgba(112,102,224,.5)}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-deny){border:0;border-radius:.25em;background:initial;background-color:#dc3741;color:#fff;font-size:1em}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-deny):focus-visible{box-shadow:0 0 0 3px rgba(220,55,65,.5)}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-cancel){border:0;border-radius:.25em;background:initial;background-color:#6e7881;color:#fff;font-size:1em}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-cancel):focus-visible{box-shadow:0 0 0 3px rgba(110,120,129,.5)}div:where(.swal2-container) button:where(.swal2-styled).swal2-default-outline:focus-visible{box-shadow:0 0 0 3px rgba(100,150,200,.5)}div:where(.swal2-container) button:where(.swal2-styled):focus-visible{outline:none}div:where(.swal2-container) button:where(.swal2-styled)::-moz-focus-inner{border:0}div:where(.swal2-container) div:where(.swal2-footer){margin:1em 0 0;padding:1em 1em 0;border-top:1px solid var(--swal2-footer-border-color);color:inherit;font-size:1em;text-align:center;cursor:initial}div:where(.swal2-container) .swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;grid-column:auto !important;overflow:hidden;border-bottom-right-radius:var(--swal2-border-radius);border-bottom-left-radius:var(--swal2-border-radius)}div:where(.swal2-container) div:where(.swal2-timer-progress-bar){width:100%;height:.25em;background:rgba(0,0,0,.2)}div:where(.swal2-container) img:where(.swal2-image){max-width:100%;margin:2em auto 1em;cursor:initial}div:where(.swal2-container) button:where(.swal2-close){position:var(--swal2-close-button-position);inset:var(--swal2-close-button-inset);z-index:2;align-items:center;justify-content:center;width:1.2em;height:1.2em;margin-top:0;margin-right:0;margin-bottom:-1.2em;padding:0;overflow:hidden;transition:color .1s,box-shadow .1s;border:none;border-radius:var(--swal2-border-radius);background:rgba(0,0,0,0);color:var(--swal2-close-button-color);font-family:monospace;font-size:var(--swal2-close-button-font-size);cursor:pointer;justify-self:end}div:where(.swal2-container) button:where(.swal2-close):hover{transform:none;background:rgba(0,0,0,0);color:#f27474}div:where(.swal2-container) button:where(.swal2-close):focus-visible{outline:none;box-shadow:inset 0 0 0 3px rgba(100,150,200,.5)}div:where(.swal2-container) button:where(.swal2-close)::-moz-focus-inner{border:0}div:where(.swal2-container) div:where(.swal2-html-container){z-index:1;justify-content:center;margin:0;padding:1em 1.6em .3em;overflow:auto;color:inherit;font-size:1.125em;font-weight:normal;line-height:normal;text-align:center;word-wrap:break-word;word-break:break-word;cursor:initial}div:where(.swal2-container) input:where(.swal2-input),div:where(.swal2-container) input:where(.swal2-file),div:where(.swal2-container) textarea:where(.swal2-textarea),div:where(.swal2-container) select:where(.swal2-select),div:where(.swal2-container) div:where(.swal2-radio),div:where(.swal2-container) label:where(.swal2-checkbox){margin:1em 2em 3px}div:where(.swal2-container) input:where(.swal2-input),div:where(.swal2-container) input:where(.swal2-file),div:where(.swal2-container) textarea:where(.swal2-textarea){box-sizing:border-box;width:auto;transition:border-color .1s,box-shadow .1s;border:1px solid #d9d9d9;border-radius:.1875em;background:var(--swal2-input-background);box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(0,0,0,0);color:inherit;font-size:1.125em}div:where(.swal2-container) input:where(.swal2-input).swal2-inputerror,div:where(.swal2-container) input:where(.swal2-file).swal2-inputerror,div:where(.swal2-container) textarea:where(.swal2-textarea).swal2-inputerror{border-color:#f27474 !important;box-shadow:0 0 2px #f27474 !important}div:where(.swal2-container) input:where(.swal2-input):focus,div:where(.swal2-container) input:where(.swal2-file):focus,div:where(.swal2-container) textarea:where(.swal2-textarea):focus{border:1px solid #b4dbed;outline:none;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(100,150,200,.5)}div:where(.swal2-container) input:where(.swal2-input)::placeholder,div:where(.swal2-container) input:where(.swal2-file)::placeholder,div:where(.swal2-container) textarea:where(.swal2-textarea)::placeholder{color:#ccc}div:where(.swal2-container) .swal2-range{margin:1em 2em 3px;background:var(--swal2-background)}div:where(.swal2-container) .swal2-range input{width:80%}div:where(.swal2-container) .swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}div:where(.swal2-container) .swal2-range input,div:where(.swal2-container) .swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}div:where(.swal2-container) .swal2-input{height:2.625em;padding:0 .75em}div:where(.swal2-container) .swal2-file{width:75%;margin-right:auto;margin-left:auto;background:var(--swal2-input-background);font-size:1.125em}div:where(.swal2-container) .swal2-textarea{height:6.75em;padding:.75em}div:where(.swal2-container) .swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:var(--swal2-input-background);color:inherit;font-size:1.125em}div:where(.swal2-container) .swal2-radio,div:where(.swal2-container) .swal2-checkbox{align-items:center;justify-content:center;background:var(--swal2-background);color:inherit}div:where(.swal2-container) .swal2-radio label,div:where(.swal2-container) .swal2-checkbox label{margin:0 .6em;font-size:1.125em}div:where(.swal2-container) .swal2-radio input,div:where(.swal2-container) .swal2-checkbox input{flex-shrink:0;margin:0 .4em}div:where(.swal2-container) label:where(.swal2-input-label){display:flex;justify-content:center;margin:1em auto 0}div:where(.swal2-container) div:where(.swal2-validation-message){align-items:center;justify-content:center;margin:1em 0 0;padding:.625em;overflow:hidden;background:var(--swal2-validation-message-background);color:var(--swal2-validation-message-color);font-size:1em;font-weight:300}div:where(.swal2-container) div:where(.swal2-validation-message)::before{content:"!";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}div:where(.swal2-container) .swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:1.25em auto;padding:0;background:rgba(0,0,0,0);font-weight:600}div:where(.swal2-container) .swal2-progress-steps li{display:inline-block;position:relative}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:var(--swal2-progress-step-background);color:#fff}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:var(--swal2-progress-step-background)}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}div:where(.swal2-icon){position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:2.5em auto .6em;border:.25em solid rgba(0,0,0,0);border-radius:50%;border-color:#000;font-family:inherit;line-height:5em;cursor:default;user-select:none}div:where(.swal2-icon) .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}div:where(.swal2-icon).swal2-error{border-color:#f27474;color:#f27474}div:where(.swal2-icon).swal2-error .swal2-x-mark{position:relative;flex-grow:1}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}div:where(.swal2-icon).swal2-error.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-error.swal2-icon-show .swal2-x-mark{animation:swal2-animate-error-x-mark .5s}div:where(.swal2-icon).swal2-warning{border-color:#f8bb86;color:#f8bb86}div:where(.swal2-icon).swal2-warning.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-warning.swal2-icon-show .swal2-icon-content{animation:swal2-animate-i-mark .5s}div:where(.swal2-icon).swal2-info{border-color:#3fc3ee;color:#3fc3ee}div:where(.swal2-icon).swal2-info.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-info.swal2-icon-show .swal2-icon-content{animation:swal2-animate-i-mark .8s}div:where(.swal2-icon).swal2-question{border-color:#87adbd;color:#87adbd}div:where(.swal2-icon).swal2-question.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-question.swal2-icon-show .swal2-icon-content{animation:swal2-animate-question-mark .8s}div:where(.swal2-icon).swal2-success{border-color:#a5dc86;color:#a5dc86}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;border-radius:50%}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line][class$=left]{top:-0.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line][class$=right]{top:-0.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}div:where(.swal2-icon).swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-0.25em;left:-0.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}div:where(.swal2-icon).swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}div:where(.swal2-icon).swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}div:where(.swal2-icon).swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}div:where(.swal2-icon).swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-line-tip{animation:swal2-animate-success-line-tip .75s}div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-line-long{animation:swal2-animate-success-line-long .75s}div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-circular-line-right{animation:swal2-rotate-success-circular-line 4.25s ease-in}[class^=swal2]{-webkit-tap-highlight-color:rgba(0,0,0,0)}.swal2-show{animation:var(--swal2-show-animation)}.swal2-hide{animation:var(--swal2-hide-animation)}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{margin-right:initial;margin-left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}.swal2-toast{box-sizing:border-box;grid-column:1/4 !important;grid-row:1/4 !important;grid-template-columns:min-content auto min-content;padding:1em;overflow-y:hidden;background:var(--swal2-background);box-shadow:0 0 1px rgba(0,0,0,.075),0 1px 2px rgba(0,0,0,.075),1px 2px 4px rgba(0,0,0,.075),1px 3px 8px rgba(0,0,0,.075),2px 4px 16px rgba(0,0,0,.075);pointer-events:all}.swal2-toast>*{grid-column:2}.swal2-toast h2:where(.swal2-title){margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-toast .swal2-loading{justify-content:center}.swal2-toast input:where(.swal2-input){height:2em;margin:.5em;font-size:1em}.swal2-toast .swal2-validation-message{font-size:1em}.swal2-toast div:where(.swal2-footer){margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-toast button:where(.swal2-close){grid-column:3/3;grid-row:1/99;align-self:center;width:.8em;height:.8em;margin:0;font-size:2em}.swal2-toast div:where(.swal2-html-container){margin:.5em 1em;padding:0;overflow:initial;font-size:1em;text-align:initial}.swal2-toast div:where(.swal2-html-container):empty{padding:0}.swal2-toast .swal2-loader{grid-column:1;grid-row:1/99;align-self:center;width:2em;height:2em;margin:.25em}.swal2-toast .swal2-icon{grid-column:1;grid-row:1/99;align-self:center;width:2em;min-width:2em;height:2em;margin:0 .5em 0 0}.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:bold}.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-toast div:where(.swal2-actions){justify-content:flex-start;height:auto;margin:0;margin-top:.5em;padding:0 .5em}.swal2-toast button:where(.swal2-styled){margin:.25em .5em;padding:.4em .6em;font-size:1em}.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;border-radius:50%}.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-0.8em;left:-0.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-0.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{animation:swal2-toast-animate-success-line-tip .75s}.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{animation:swal2-toast-animate-success-line-long .75s}.swal2-toast.swal2-show{animation:swal2-toast-show .5s}.swal2-toast.swal2-hide{animation:swal2-toast-hide .1s forwards}@keyframes swal2-show{0%{transform:scale(0.7)}45%{transform:scale(1.05)}80%{transform:scale(0.95)}100%{transform:scale(1)}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(0.5);opacity:0}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-0.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(0.4);opacity:0}50%{margin-top:1.625em;transform:scale(0.4);opacity:0}80%{margin-top:-0.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0deg);opacity:1}}@keyframes swal2-rotate-loading{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-toast-show{0%{transform:translateY(-0.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(0.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0deg)}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-0.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}</style></head>

  <body>
    <div id="root"><nav class="mobile-hidden"><a href="https://sweetalert2.github.io/#examples"><span>Examples</span></a><a href="https://sweetalert2.github.io/recipe-gallery/" class="recipe-gallery"><span>Recipe Gallery</span></a><a href="https://sweetalert2.github.io/#download"><span>Installation</span></a><a href="https://sweetalert2.github.io/#usage"><span>Usage</span></a><a href="https://sweetalert2.github.io/#frameworks-integrations"><span>Integrations</span></a><a href="https://sweetalert2.github.io/#configuration" class="mobile-hidden"><span>Configuration Params</span></a><a href="https://sweetalert2.github.io/#declarative-templates" class="mobile-hidden"><span>Declarative Templates</span></a><a href="https://sweetalert2.github.io/#handling-buttons"><span>Handling Buttons</span></a><a href="https://sweetalert2.github.io/#handling-dismissals"><span>Handling Dismissals</span></a><a href="https://sweetalert2.github.io/#icons"><span>Icons</span></a><a href="https://sweetalert2.github.io/#input-types"><span>Input Types</span></a><a href="https://sweetalert2.github.io/#methods" class="mobile-hidden"><span>Methods</span></a><a href="https://sweetalert2.github.io/#sponsors"><span>Sponsors</span></a><a href="https://sweetalert2.github.io/#nsfw-sponsors"><span>NSFW Sponsors</span></a><div class="theme-selector"><label>Theme: <select autocomplete="off"><option value="light">Default (light)</option><option value="dark">Dark</option><option value="auto">Auto</option><option value="borderless">Borderless</option></select></label></div></nav><i class="fa fa-bars" id="show-sidebar"></i><iframe src="./sweetalert2.min_files/github-btn.html" frameborder="0" scrolling="0" width="170" height="30" title="GitHub stars" class="mobile-hidden"></iframe><header><div id="slava-ukraini"><a href="https://war.ukraine.ua/support-ukraine/">SAVE LIVES, SUPPORT UKRAINE</a> 🇺🇦</div><div id="logo-slider"><div id="logo-track"><img src="./sweetalert2.min_files/logo-donut-track.svg"></div><div id="logo-bouncer"><div id="logo-spinner"><svg xmlns="http://www.w3.org/2000/svg" viewBox="15.4 -120.3 269.3 269.3"><circle id="lower_circle" cx="161.8" cy="27" r="100.2" fill="#fdcc80"></circle><circle id="inner_circle" cx="149.4" cy="14.2" r="36.8" fill="#fff"></circle><path id="upper_frosting" d="M108.7 105.5c-6.6.3-31.9-13.4-42.4-49.5-1.9-6.6-4.5-16.8-4.5-29.6 0-55 44.6-99.6 99.6-99.6 13.1 0 23.5 2.7 29.6 4.5 34.4 10.4 48 34.1 44.9 40.5s-10.6-3.4-22.9-2.5c-1.4.1-4.2 4-4.2 6.2 0 7.2 13.5 12.7 14.6 15.9 1.7 5 3.4 6.2 2.3 9.5-1.5 4.8-2.9 3.6-5.2 5.9-.9.9-5.6.7-16.6-1.7-5.9-1.3-18-11.2-18-11.4 0-.4-16.2-13.3-30.2-14.8-6.6-.7-28.1-2.8-39.2 19.2-.5 1.1-4.4 20-4.2 22.5.9 11.9 7 24.7 12.1 27.5 11.7 6.4 12.9 14.7 12.8 14.4-.1-.4 7.8 14.7 8.2 17.3.3 2.1-.8 7.4-3.7 8.7-3.5 1.5-7.7-1.7-8.4-2.1-.8-.5-10.7-16.3-19.5-13.1-.8.3-6 3.7-7.6 5-.3.2 4.8 15.4 5.6 18.5.5 1.8-2.3 8.7-3.1 8.7z" opacity=".5" fill="#fa7471"></path><g id="sprinkles"><path d="M135.1-69.3h-.2c-2.3.4-3.8 2.6-3.4 4.9.4 2.3 2.6 3.8 4.9 3.4.8-.1 1.5-.5 2.1-1 1-.9 1.6-2.3 1.4-3.7-.3-2.3-2.5-3.9-4.8-3.6z" style="fill: rgb(250, 116, 113);"></path><path d="M181.7-65c-2.3-.1-4.3 1.7-4.5 4l-.5 8.4c-.1 2.3 1.7 4.3 4 4.5 1.2.1 2.2-.3 3.1-1.1.8-.7 1.3-1.7 1.4-2.9l.5-8.4c.1-2.4-1.7-4.4-4-4.5z" style="fill: rgb(250, 116, 113);"></path><path d="M94.4 47.1c-2.3-.1-4.3 1.7-4.5 4l-.5 8.4c-.1 2.3 1.7 4.3 4 4.5 1.2.1 2.2-.3 3.1-1.1.8-.7 1.3-1.7 1.4-2.9l.5-8.4c.1-2.4-1.7-4.4-4-4.5z" style="fill: rgb(250, 116, 113);"></path><path d="M65.4 1.7c-2.3-.1-4.3 1.7-4.5 4l-.5 8.4c-.1 2.3 1.7 4.3 4 4.5 1.2.1 2.2-.3 3.1-1.1s1.3-1.7 1.4-2.9l.5-8.4c.1-2.3-1.7-4.3-4-4.5z" style="fill: rgb(165, 117, 183);"></path><path d="M157.2-61.8l-6.2 5.6c-1.7 1.6-1.9 4.2-.3 6 1.6 1.7 4.2 1.9 6 .3l6.2-5.6c1.7-1.6 1.9-4.2.3-6s-4.3-1.9-6-.3z" style="fill: rgb(165, 117, 183);"></path><path d="M93.8-23.3l-8.3-.5c-2.3-.1-4.3 1.7-4.5 4s1.7 4.3 4 4.5l8.3.5c1.2.1 2.2-.3 3.1-1.1.8-.7 1.3-1.7 1.4-2.9.1-2.4-1.7-4.4-4-4.5z" style="fill: rgb(250, 116, 113);"></path><path d="M189.1-35.1l-8.3-.5c-2.3-.1-4.3 1.7-4.5 4s1.7 4.3 4 4.5l8.3.5c1.2.1 2.2-.3 3.1-1.1s1.3-1.7 1.4-2.9c.1-2.4-1.6-4.4-4-4.5z" style="fill: rgb(165, 117, 183);"></path><path d="M132.4-42.3l-7.1-4.4c-2-1.2-4.6-.6-5.8 1.4-1.2 2-.6 4.6 1.4 5.8l7.1 4.4c1 .6 2.1.8 3.2.5 1.1-.2 2-.9 2.6-1.9 1.1-2 .5-4.6-1.4-5.8z" style="fill: rgb(250, 116, 113);"></path><path d="M88.2 5.7c-2.1 1.1-2.8 3.7-1.7 5.7l4 7.4c1.1 2.1 3.7 2.8 5.7 1.7 1.1-.6 1.8-1.6 2.1-2.7.3-1 .1-2.1-.4-3l-4-7.4c-1.1-2-3.7-2.8-5.7-1.7z" style="fill: rgb(165, 117, 183);"></path></g><g class="hair"><path d="M232.5-83.3c-2.2 3.1-4.6 6-7.2 8.7-1.8 1.9-1.7 4.9.1 6.7 1.9 1.8 4.9 1.7 6.7-.1 2.9-3 5.6-6.3 8-9.7 1.5-2.1 1-5.1-1.1-6.6s-5-1.1-6.5 1z" style="fill: rgb(165, 117, 183);"></path><path d="M144.7-113.4c.2 3.7.2 7.5-.2 11.2-.2 2.6 1.7 4.9 4.3 5.1 2.6.2 4.9-1.7 5.1-4.3.4-4.2.4-8.4.2-12.6-.2-2.6-2.4-4.6-5-4.4-2.5.1-4.5 2.4-4.4 5z" style="fill: rgb(165, 117, 183);"></path><path d="M59.3-75.7c3.1 2.2 6 4.5 8.7 7.1 1.9 1.8 4.9 1.7 6.7-.2s1.7-4.9-.2-6.7c-3-2.9-6.3-5.5-9.8-8-2.1-1.5-5.1-1-6.6 1.1s-1 5.2 1.2 6.7z" style="fill: rgb(165, 117, 183);"></path><path d="M22.6 11.6c3.7-.2 7.5-.1 11.2.3 2.6.3 4.9-1.6 5.2-4.2s-1.6-4.9-4.2-5.2c-4.2-.4-8.4-.5-12.6-.3-2.6.1-4.6 2.3-4.5 4.9.1 2.7 2.3 4.7 4.9 4.5z" style="fill: rgb(165, 117, 183);"></path><path d="M60.2 102.2c2.2-3 4.6-5.9 7.2-8.6 1.8-1.9 1.8-4.9-.1-6.7-1.9-1.8-4.9-1.8-6.7.1-2.9 3-5.6 6.3-8.1 9.7-1.5 2.1-1 5.1 1.1 6.6 2.1 1.4 5 1 6.6-1.1z" style="fill: rgb(165, 117, 183);"></path></g><circle cx="149.1" cy="15" r="99.4" style="stroke-width: 8.2; stroke: rgb(138, 61, 155); fill: none; stroke-miterlimit: 10;"></circle><g id="side_swirl"><path d="M192.5 5.6c4.2-4.4 9.6.5 13.6 2.9 4 2.3 7.9 3.4 12.4 2.3 8.7-1.9 13.9-9.9 10.2-18.5-1.9-4.4-5.5-7.4-9.5-9.8-2.3-1.4-5.5-2.5-7-4.9-2.6-4.1 2.6-5.6 5.7-4.4 4.6 1.7 8.3 3.1 13.2 1.4 3.5-1.2 7.6-1.6 8.2-6.1.7-5.3-7.4-7.6-8.1-2.2-.1.2-.1.5-.2.7.8-.6 1.7-1.3 2.5-1.9-1.6.6-3.3 1-4.9 1.5-3.2 1-5.2-.1-8-1.3-4.2-1.6-8.7-1.6-12.6.9-8.9 5.9-4.6 16.6 2.8 21.3 3.9 2.5 10.3 4.7 10.5 10.2.2 6.1-7.6 5.7-11.2 3.6-7.7-4.5-16.2-9.3-23.7-1.6-3.6 3.9 2.3 9.8 6.1 5.9z" style="fill: rgb(138, 61, 155);"></path><path d="M132.5 56.1c-.9 3.8-.5 7.5 1.3 11 1.8 3.6 7.8 8 7.6 12.1-.1 3.1-2.8 4.1-5.5 3.5s-4.2-2.3-5.7-4.5c-2.3-3.3-4.5-6.6-8.2-8.5-6.7-3.5-15.8-3-19.4 4.4-1.8 3.7-2.1 8.1-.9 12.1.7 2.3 2 4.3 3.3 6.3.7 1.2 1.6 2.2 1.3 3.7-.4 1.7-1.3 1.6-3.1 1.8-5.3.6-5.4 9 0 8.4 4-.5 8.2-1.3 10.5-4.9 2.3-3.7 1.4-8.1-.6-11.7-1.4-2.6-3.5-4.9-3.7-7.9-.3-4.2 2.2-6.4 6.2-5.5 5.8 1.3 7.2 7.2 11.1 11 5.7 5.5 17.4 5.9 21.4-1.7 2.1-3.9 2.2-8.7.1-12.6-2.5-4.6-9-8.8-7.6-14.6 1.2-5.4-6.9-7.7-8.1-2.4z" style="fill: rgb(138, 61, 155);"></path><path d="M138.2-20c13.4-2.9 27.6-.7 37.5 9.4 7.8 8 11.8 19.6 10.2 30.7-3.9 27.4-37.5 39.4-58.4 22-12.2-10.2-14.2-25.9-10.4-40.6 1.4-5.6-7.2-8-8.7-2.4-4.2 16.3-2.4 33.7 9.6 46.4 9.3 9.9 23.6 15.2 37.1 13.8 17.5-1.8 32.6-13.9 38.1-30.7 4.6-13.9 1.4-29.7-7.4-41.3-11.9-15.7-31.3-20-49.9-16-5.7 1.2-3.3 9.9 2.3 8.7z" style="fill: rgb(138, 61, 155);"></path><path d="M99.3-54.8l-8 2.4c-2.2.7-3.5 3-2.9 5.2.7 2.2 3 3.5 5.2 2.9l8-2.4c1.1-.3 2-1.1 2.5-2s.7-2.1.3-3.2c-.5-2.2-2.9-3.5-5.1-2.9z" style="fill: rgb(165, 117, 183);"></path><path d="M81.8 30.7h-.2c-3.2.6-4.9 4.7-1.8 7.7 2.1 1.2 4.1.8 5.4-.4 1-.9 1.6-2.3 1.4-3.7-.4-2.3-2.5-3.9-4.8-3.6z" style="fill: rgb(250, 116, 113);"></path><path d="M124.3-21.7c-3.2 1.7-6.1 4.3-8.3 7.1-1.4 1.8-1.1 4.9.8 6.3 2 1.5 4.7 1.1 6.3-.8.4-.5.8-.9 1.2-1.4l.1-.1c.2-.3.6-.5.8-.8.6-.4 1-.9 1.6-1.3.3-.3.6-.4.9-.6.8-.5-.6.3.1-.1 2-1.1 3.5-3.6 2.3-6-.9-2-3.5-3.5-5.8-2.3z" style="fill: rgb(138, 61, 155);"></path></g></svg></div></div></div><img id="logo-text" alt="SweetAlert2" src="./sweetalert2.min_files/SweetAlert2.png"><div class="stats mobile-hidden"><div>Current version: <a href="https://github.com/sweetalert2/sweetalert2/releases" aria-label="Current version v11.17.2">v11.17.2</a></div><div>Latest update: <a href="https://github.com/sweetalert2/sweetalert2/commits/main" aria-label="Latest update today">today</a></div><div>Downloads last month: <a href="https://npm-stat.com/charts.html?package=sweetalert2" aria-label="Downloads last month 2,809,592">2,809,592</a></div></div><div id="docsearch"><button type="button" aria-label="Search (Ctrl+K)" class="DocSearch DocSearch-Button"><span class="DocSearch-Button-Container"><svg width="20" height="20" viewBox="0 0 20 20" aria-hidden="true" class="DocSearch-Search-Icon"><path d="M14.386 14.386l4.0877 4.0877-4.0877-4.0877c-2.9418 2.9419-7.7115 2.9419-10.6533 0-2.9419-2.9418-2.9419-7.7115 0-10.6533 2.9418-2.9419 7.7115-2.9419 10.6533 0 2.9419 2.9418 2.9419 7.7115 0 10.6533z" stroke="currentColor" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"></path></svg><span class="DocSearch-Button-Placeholder">Search</span></span><span class="DocSearch-Button-Keys"><kbd class="DocSearch-Button-Key"><svg width="15" height="15" class="DocSearch-Control-Key-Icon"><path d="M4.505 4.496h2M5.505 5.496v5M8.216 4.496l.055 5.993M10 7.5c.333.333.5.667.5 1v2M12.326 4.5v5.996M8.384 4.496c1.674 0 2.116 0 2.116 1.5s-.442 1.5-2.116 1.5M3.205 9.303c-.09.448-.277 1.21-1.241 1.203C1 10.5.5 9.513.5 8V7c0-1.57.5-2.5 1.464-2.494.964.006 1.134.598 1.24 1.342M12.553 10.5h1.953" stroke-width="1.2" stroke="currentColor" fill="none" stroke-linecap="square"></path></svg></kbd><kbd class="DocSearch-Button-Key">K</kbd></span></button></div><h1>A beautiful, responsive, customizable, accessible (WAI-ARIA) replacement for JavaScript's popup boxes</h1><h2>Zero dependencies</h2></header><div class="showcase normal"><div class="normal-alert">Normal alert</div><button>Show normal alert</button><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-title function_">alert</span>(<span class="hljs-string">"You clicked the button!"</span>);</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form><div class="vs-icon"></div></div><div class="showcase sweet"><img height="30" alt="SweetAlert2" src="./sweetalert2.min_files/SweetAlert2.png"><button class="show-example-btn" aria-label="Show SweetAlert2 success message">Show success message</button><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">title</span>: <span class="hljs-string">"Good job!"</span>,
  <span class="hljs-attr">text</span>: <span class="hljs-string">"You clicked the button!"</span>,
  <span class="hljs-attr">icon</span>: <span class="hljs-string">"success"</span>
});</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></div><div class="center-container"><p class="center"><a href="https://hostinger.com/?REFERRALCODE=BKZHOSTINDAB" target="_blank" rel="noreferrer noopener" tabindex="-1">Get 20% discount on Hostiger Web Hosting!</a></p></div><h3 id="examples">Examples</h3><ul class="examples"><li id="message-example"><div class="ui"><p>A basic message</p><button class="show-example-btn" aria-label="Try me! Example: A basic message">Try me!</button></div><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>(<span class="hljs-string">"SweetAlert2 is working!"</span>);</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></li><li id="title-text-example"><div class="ui"><p>A title with a text under</p><button class="show-example-btn" aria-label="Try me! Example: A title with a text under">Try me!</button></div><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">title</span>: <span class="hljs-string">"The Internet?"</span>,
  <span class="hljs-attr">text</span>: <span class="hljs-string">"That thing is still around?"</span>,
  <span class="hljs-attr">icon</span>: <span class="hljs-string">"question"</span>
});</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></li><li id="serror-example"><div class="ui"><p>A modal with a title, an error icon, a text, and a footer</p><button class="show-example-btn" aria-label="Try me! Example: A modal with a title, an error icon, a text, and a footer">Try me!</button></div><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">icon</span>: <span class="hljs-string">"error"</span>,
  <span class="hljs-attr">title</span>: <span class="hljs-string">"Oops..."</span>,
  <span class="hljs-attr">text</span>: <span class="hljs-string">"Something went wrong!"</span>,
  <span class="hljs-attr">footer</span>: <span class="hljs-string">'&lt;a href="#"&gt;Why do I have this issue?&lt;/a&gt;'</span>
});</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></li><li id="long-text"><div class="ui"><p>A modal window with a long content inside:</p><button class="show-example-btn" aria-label="Try me! Example: A modal window with a long content inside">Try me!</button></div><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">imageUrl</span>: <span class="hljs-string">"https://placeholder.pics/svg/300x1500"</span>,
  <span class="hljs-attr">imageHeight</span>: <span class="hljs-number">1500</span>,
  <span class="hljs-attr">imageAlt</span>: <span class="hljs-string">"A tall image"</span>
});</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></li><li id="draggable-modal"><div class="ui"><p>A draggable modal window:</p><button class="show-example-btn" aria-label="Try me! Example: A draggable modal window">Try me!</button></div><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">title</span>: <span class="hljs-string">"Drag me!"</span>,
  <span class="hljs-attr">icon</span>: <span class="hljs-string">"success"</span>,
  <span class="hljs-attr">draggable</span>: <span class="hljs-literal">true</span>
});</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></li><li id="custom-html"><div class="ui"><p>Custom HTML description and buttons with ARIA labels</p><button class="show-example-btn" aria-label="Try me! Example: Custom HTML description and buttons">Try me!</button></div><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">title</span>: <span class="hljs-string">"&lt;strong&gt;HTML &lt;u&gt;example&lt;/u&gt;&lt;/strong&gt;"</span>,
  <span class="hljs-attr">icon</span>: <span class="hljs-string">"info"</span>,
  <span class="hljs-attr">html</span>: <span class="hljs-string">`
    You can use &lt;b&gt;bold text&lt;/b&gt;,
    &lt;a href="#" autofocus&gt;links&lt;/a&gt;,
    and other HTML tags
  `</span>,
  <span class="hljs-attr">showCloseButton</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">showCancelButton</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">focusConfirm</span>: <span class="hljs-literal">false</span>,
  <span class="hljs-attr">confirmButtonText</span>: <span class="hljs-string">`
    &lt;i class="fa fa-thumbs-up"&gt;&lt;/i&gt; Great!
  `</span>,
  <span class="hljs-attr">confirmButtonAriaLabel</span>: <span class="hljs-string">"Thumbs up, great!"</span>,
  <span class="hljs-attr">cancelButtonText</span>: <span class="hljs-string">`
    &lt;i class="fa fa-thumbs-down"&gt;&lt;/i&gt;
  `</span>,
  <span class="hljs-attr">cancelButtonAriaLabel</span>: <span class="hljs-string">"Thumbs down"</span>
});</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></li><li id="three-buttons"><div class="ui"><p>A dialog with three buttons</p><button class="show-example-btn" aria-label="Try me! Example: A dialog with three buttons">Try me!</button></div><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">title</span>: <span class="hljs-string">"Do you want to save the changes?"</span>,
  <span class="hljs-attr">showDenyButton</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">showCancelButton</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">confirmButtonText</span>: <span class="hljs-string">"Save"</span>,
  <span class="hljs-attr">denyButtonText</span>: <span class="hljs-string">`Don't save`</span>
}).<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> {
  <span class="hljs-comment">/* Read more about isConfirmed, isDenied below */</span>
  <span class="hljs-keyword">if</span> (result.<span class="hljs-property">isConfirmed</span>) {
    <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>(<span class="hljs-string">"Saved!"</span>, <span class="hljs-string">""</span>, <span class="hljs-string">"success"</span>);
  } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (result.<span class="hljs-property">isDenied</span>) {
    <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>(<span class="hljs-string">"Changes are not saved"</span>, <span class="hljs-string">""</span>, <span class="hljs-string">"info"</span>);
  }
});</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></li><li id="custom-position"><div class="ui"><p>A custom positioned dialog</p><button class="show-example-btn" aria-label="Try me! Example: A custom positioned dialog">Try me!</button></div><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">position</span>: <span class="hljs-string">"top-end"</span>,
  <span class="hljs-attr">icon</span>: <span class="hljs-string">"success"</span>,
  <span class="hljs-attr">title</span>: <span class="hljs-string">"Your work has been saved"</span>,
  <span class="hljs-attr">showConfirmButton</span>: <span class="hljs-literal">false</span>,
  <span class="hljs-attr">timer</span>: <span class="hljs-number">1500</span>
});</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></li><li id="custom-animation"><div class="ui"><p>Custom animation with <a href="https://animate.style/" target="_blank" rel="noreferrer noopener" tabindex="-1" class="nowrap">Animate.css <i class="fa fa-external-link"></i></a></p><button class="show-example-btn" aria-label="Try me! Example: jQuery HTML with custom animation">Try me!</button></div><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">title</span>: <span class="hljs-string">"Custom animation with Animate.css"</span>,
  <span class="hljs-attr">showClass</span>: {
    <span class="hljs-attr">popup</span>: <span class="hljs-string">`
      animate__animated
      animate__fadeInUp
      animate__faster
    `</span>
  },
  <span class="hljs-attr">hideClass</span>: {
    <span class="hljs-attr">popup</span>: <span class="hljs-string">`
      animate__animated
      animate__fadeOutDown
      animate__faster
    `</span>
  }
});</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></li><li id="confirm-dialog"><div class="ui"><p>A confirm dialog, with a function attached to the "Confirm"-button</p><button class="show-example-btn" aria-label="Try me! Example: A confirm dialog, with a function attached to the &#39;Confirm&#39;-button">Try me!</button></div><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">title</span>: <span class="hljs-string">"Are you sure?"</span>,
  <span class="hljs-attr">text</span>: <span class="hljs-string">"You won't be able to revert this!"</span>,
  <span class="hljs-attr">icon</span>: <span class="hljs-string">"warning"</span>,
  <span class="hljs-attr">showCancelButton</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">confirmButtonColor</span>: <span class="hljs-string">"#3085d6"</span>,
  <span class="hljs-attr">cancelButtonColor</span>: <span class="hljs-string">"#d33"</span>,
  <span class="hljs-attr">confirmButtonText</span>: <span class="hljs-string">"Yes, delete it!"</span>
}).<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> {
  <span class="hljs-keyword">if</span> (result.<span class="hljs-property">isConfirmed</span>) {
    <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
      <span class="hljs-attr">title</span>: <span class="hljs-string">"Deleted!"</span>,
      <span class="hljs-attr">text</span>: <span class="hljs-string">"Your file has been deleted."</span>,
      <span class="hljs-attr">icon</span>: <span class="hljs-string">"success"</span>
    });
  }
});</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></li><li id="dismiss-handle"><div class="ui"><p>... and by passing a parameter, you can execute something else for "Cancel"</p><button class="show-example-btn" aria-label="Try me! Example: passing a parameter, you can execute something else for &#39;Cancel&#39;">Try me!</button></div><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-keyword">const</span> swalWithBootstrapButtons = <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">mixin</span>({
  <span class="hljs-attr">customClass</span>: {
    <span class="hljs-attr">confirmButton</span>: <span class="hljs-string">"btn btn-success"</span>,
    <span class="hljs-attr">cancelButton</span>: <span class="hljs-string">"btn btn-danger"</span>
  },
  <span class="hljs-attr">buttonsStyling</span>: <span class="hljs-literal">false</span>
});
swalWithBootstrapButtons.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">title</span>: <span class="hljs-string">"Are you sure?"</span>,
  <span class="hljs-attr">text</span>: <span class="hljs-string">"You won't be able to revert this!"</span>,
  <span class="hljs-attr">icon</span>: <span class="hljs-string">"warning"</span>,
  <span class="hljs-attr">showCancelButton</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">confirmButtonText</span>: <span class="hljs-string">"Yes, delete it!"</span>,
  <span class="hljs-attr">cancelButtonText</span>: <span class="hljs-string">"No, cancel!"</span>,
  <span class="hljs-attr">reverseButtons</span>: <span class="hljs-literal">true</span>
}).<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> {
  <span class="hljs-keyword">if</span> (result.<span class="hljs-property">isConfirmed</span>) {
    swalWithBootstrapButtons.<span class="hljs-title function_">fire</span>({
      <span class="hljs-attr">title</span>: <span class="hljs-string">"Deleted!"</span>,
      <span class="hljs-attr">text</span>: <span class="hljs-string">"Your file has been deleted."</span>,
      <span class="hljs-attr">icon</span>: <span class="hljs-string">"success"</span>
    });
  } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (
    <span class="hljs-comment">/* Read more about handling dismissals below */</span>
    result.<span class="hljs-property">dismiss</span> === <span class="hljs-title class_">Swal</span>.<span class="hljs-property">DismissReason</span>.<span class="hljs-property">cancel</span>
  ) {
    swalWithBootstrapButtons.<span class="hljs-title function_">fire</span>({
      <span class="hljs-attr">title</span>: <span class="hljs-string">"Cancelled"</span>,
      <span class="hljs-attr">text</span>: <span class="hljs-string">"Your imaginary file is safe :)"</span>,
      <span class="hljs-attr">icon</span>: <span class="hljs-string">"error"</span>
    });
  }
});</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></li><li id="custom-image-example"><div class="ui"><p>A message with a custom image</p><button class="show-example-btn" aria-label="Try me! Example: A message with a custom image">Try me!</button></div><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">title</span>: <span class="hljs-string">"Sweet!"</span>,
  <span class="hljs-attr">text</span>: <span class="hljs-string">"Modal with a custom image."</span>,
  <span class="hljs-attr">imageUrl</span>: <span class="hljs-string">"https://unsplash.it/400/200"</span>,
  <span class="hljs-attr">imageWidth</span>: <span class="hljs-number">400</span>,
  <span class="hljs-attr">imageHeight</span>: <span class="hljs-number">200</span>,
  <span class="hljs-attr">imageAlt</span>: <span class="hljs-string">"Custom image"</span>
});</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></li><li id="custom-width-padding-background"><div class="ui"><p>A message with custom width, padding, background and animated Nyan Cat</p><button class="show-example-btn" aria-label="Try me! Example: A message with custom width, padding and background">Try me!</button></div><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">title</span>: <span class="hljs-string">"Custom width, padding, color, background."</span>,
  <span class="hljs-attr">width</span>: <span class="hljs-number">600</span>,
  <span class="hljs-attr">padding</span>: <span class="hljs-string">"3em"</span>,
  <span class="hljs-attr">color</span>: <span class="hljs-string">"#716add"</span>,
  <span class="hljs-attr">background</span>: <span class="hljs-string">"#fff url(/images/trees.png)"</span>,
  <span class="hljs-attr">backdrop</span>: <span class="hljs-string">`
    rgba(0,0,123,0.4)
    url("/images/nyan-cat.gif")
    left top
    no-repeat
  `</span>
});</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></li><li id="timer-example"><div class="ui"><p>A message with auto close timer</p><button class="show-example-btn" aria-label="Try me! Example: A message with auto close timer">Try me!</button></div><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-keyword">let</span> timerInterval;
<span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">title</span>: <span class="hljs-string">"Auto close alert!"</span>,
  <span class="hljs-attr">html</span>: <span class="hljs-string">"I will close in &lt;b&gt;&lt;/b&gt; milliseconds."</span>,
  <span class="hljs-attr">timer</span>: <span class="hljs-number">2000</span>,
  <span class="hljs-attr">timerProgressBar</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">didOpen</span>: <span class="hljs-function">() =&gt;</span> {
    <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">showLoading</span>();
    <span class="hljs-keyword">const</span> timer = <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">getPopup</span>().<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">"b"</span>);
    timerInterval = <span class="hljs-built_in">setInterval</span>(<span class="hljs-function">() =&gt;</span> {
      timer.<span class="hljs-property">textContent</span> = <span class="hljs-string">`<span class="hljs-subst">${Swal.getTimerLeft()}</span>`</span>;
    }, <span class="hljs-number">100</span>);
  },
  <span class="hljs-attr">willClose</span>: <span class="hljs-function">() =&gt;</span> {
    <span class="hljs-built_in">clearInterval</span>(timerInterval);
  }
}).<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> {
  <span class="hljs-comment">/* Read more about handling dismissals below */</span>
  <span class="hljs-keyword">if</span> (result.<span class="hljs-property">dismiss</span> === <span class="hljs-title class_">Swal</span>.<span class="hljs-property">DismissReason</span>.<span class="hljs-property">timer</span>) {
    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">"I was closed by the timer"</span>);
  }
});</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></li><li id="rtl"><div class="ui"><p>Right-to-left support for Arabic, Persian, Hebrew, and other RTL languages</p><button class="show-example-btn" aria-label="Try me! Example: A message in Arabic">Try me!</button></div><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">title</span>: <span class="hljs-string">"هل تريد الاستمرار؟"</span>,
  <span class="hljs-attr">icon</span>: <span class="hljs-string">"question"</span>,
  <span class="hljs-attr">iconHtml</span>: <span class="hljs-string">"؟"</span>,
  <span class="hljs-attr">confirmButtonText</span>: <span class="hljs-string">"نعم"</span>,
  <span class="hljs-attr">cancelButtonText</span>: <span class="hljs-string">"لا"</span>,
  <span class="hljs-attr">showCancelButton</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">showCloseButton</span>: <span class="hljs-literal">true</span>
});</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></li><li id="ajax-request"><div class="ui"><p>AJAX request example</p><button class="show-example-btn" aria-label="Try me! Example: AJAX request">Try me!</button></div><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">title</span>: <span class="hljs-string">"Submit your Github username"</span>,
  <span class="hljs-attr">input</span>: <span class="hljs-string">"text"</span>,
  <span class="hljs-attr">inputAttributes</span>: {
    <span class="hljs-attr">autocapitalize</span>: <span class="hljs-string">"off"</span>
  },
  <span class="hljs-attr">showCancelButton</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">confirmButtonText</span>: <span class="hljs-string">"Look up"</span>,
  <span class="hljs-attr">showLoaderOnConfirm</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">preConfirm</span>: <span class="hljs-title function_">async</span> (login) =&gt; {
    <span class="hljs-keyword">try</span> {
      <span class="hljs-keyword">const</span> githubUrl = <span class="hljs-string">`
        https://api.github.com/users/<span class="hljs-subst">${login}</span>
      `</span>;
      <span class="hljs-keyword">const</span> response = <span class="hljs-keyword">await</span> <span class="hljs-title function_">fetch</span>(githubUrl);
      <span class="hljs-keyword">if</span> (!response.<span class="hljs-property">ok</span>) {
        <span class="hljs-keyword">return</span> <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">showValidationMessage</span>(<span class="hljs-string">`
          <span class="hljs-subst">${<span class="hljs-built_in">JSON</span>.stringify(<span class="hljs-keyword">await</span> response.json())}</span>
        `</span>);
      }
      <span class="hljs-keyword">return</span> response.<span class="hljs-title function_">json</span>();
    } <span class="hljs-keyword">catch</span> (error) {
      <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">showValidationMessage</span>(<span class="hljs-string">`
        Request failed: <span class="hljs-subst">${error}</span>
      `</span>);
    }
  },
  <span class="hljs-attr">allowOutsideClick</span>: <span class="hljs-function">() =&gt;</span> !<span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">isLoading</span>()
}).<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> {
  <span class="hljs-keyword">if</span> (result.<span class="hljs-property">isConfirmed</span>) {
    <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
      <span class="hljs-attr">title</span>: <span class="hljs-string">`<span class="hljs-subst">${result.value.login}</span>'s avatar`</span>,
      <span class="hljs-attr">imageUrl</span>: result.<span class="hljs-property">value</span>.<span class="hljs-property">avatar_url</span>
    });
  }
});</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></li></ul><div class="center-container download-section"><h3 id="download">Download &amp; install</h3><pre><code><span class="unselectable">$ </span>npm install sweetalert2</code></pre><p>Or grab from <a href="https://www.jsdelivr.com/package/npm/sweetalert2" target="_blank" rel="noopener" class="nowrap">jsDelivr CDN <i class="fa fa-external-link"></i></a></p><pre class=""><code data-highlighted="yes" class="hljs language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.jsdelivr.net/npm/sweetalert2@11"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form><p class="jsdelivr-info mobile-hidden">sweetalert2 is the <strong>20th</strong> most popular package on jsDelivr, with <strong>1,607,211,708</strong> CDN hits in the last month</p></div><div class="center-container"><h3 id="usage">Usage</h3><div class="mobile-hidden"><p>1. Import the plugin:</p><pre class=""><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Swal</span> <span class="hljs-keyword">from</span> <span class="hljs-string">'sweetalert2'</span>

<span class="hljs-comment">// or via CommonJS</span>
<span class="hljs-keyword">const</span> <span class="hljs-title class_">Swal</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">'sweetalert2'</span>)</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form><div class="mobile-hidden"><p>It's also possible to import JS and CSS separately, e.g. if you need to customize styles:</p><pre class=""><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Swal</span> <span class="hljs-keyword">from</span> <span class="hljs-string">'sweetalert2/dist/sweetalert2.js'</span>
<span class="hljs-keyword">import</span> <span class="hljs-string">'sweetalert2/src/sweetalert2.scss'</span></code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form><p>2. Call the sweetAlert2-function after the page has loaded</p></div><pre class=""><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">title</span>: <span class="hljs-string">'Error!'</span>,
  <span class="hljs-attr">text</span>: <span class="hljs-string">'Do you want to continue'</span>,
  <span class="hljs-attr">icon</span>: <span class="hljs-string">'error'</span>,
  <span class="hljs-attr">confirmButtonText</span>: <span class="hljs-string">'Cool'</span>
})</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form><p>As an old-school alternative, you can initialize the plugin by referencing the necessary files:</p><pre class=""><code data-highlighted="yes" class="hljs language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"sweetalert2.all.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form><p class="mobile-hidden">Or with the stylesheet separately if desired:</p><pre class=""><code data-highlighted="yes" class="hljs language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"sweetalert2.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"sweetalert2.min.css"</span>&gt;</span></code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></div></div><div class="center-container"><h3 id="frameworks-integrations">Integrations with major JS frameworks</h3><div class="frameworks-integrations"><div><a href="https://github.com/sweetalert2/sweetalert2-react-content" target="_blank" rel="noopener" aria-label="React integration">React<br><img width="125" alt="" src="./sweetalert2.min_files/react.svg"></a></div><div><a href="https://github.com/avil13/vue-sweetalert2" target="_blank" rel="noopener" aria-label="Vue integration">Vue<br><img width="125" alt="" src="./sweetalert2.min_files/vue.png"></a></div><div><a href="https://github.com/sweetalert2/ngx-sweetalert2" target="_blank" rel="noopener" aria-label="Angular integration">Angular<br><img width="125" alt="" src="./sweetalert2.min_files/angular.svg"></a></div></div></div><div class="mobile-hidden"><h3 id="configuration">Configuration Params</h3><p class="center">Here are the keys that you can use if you pass an object into sweetAlert2:</p><table id="api"><thead><tr class="titles"><th>Argument<br>(<i>Default value</i>)</th><th>Description</th></tr></thead><tbody><tr id="title"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#title">#</a><h4>title</h4><br><i>''</i></td><td>The title of the popup, as HTML.</td></tr><tr id="titleText"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#titleText">#</a><h4>titleText</h4><br><i>''</i></td><td>The title of the popup, as text. Useful to avoid HTML injection.</td></tr><tr id="html"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#html">#</a><h4>html</h4><br><i>''</i></td><td>A HTML description for the popup.<br>If <strong>text</strong> and <strong>html</strong> parameters are provided in the same time,<strong>html</strong> will be used.<br>[Security] SweetAlert2 does NOT sanitize this parameter. It is the developer's responsibility to escape any user input when using the <strong>html</strong> option, so XSS attacks would be prevented.</td></tr><tr id="text"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#text">#</a><h4>text</h4><br><i>''</i></td><td>A description for the popup.<br>If <strong>text</strong> and <strong>html</strong> parameters are provided in the same time,<strong>html</strong> will be used.</td></tr><tr id="icon"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#icon">#</a><h4>icon</h4><br><i>undefined</i></td><td>The icon of the popup. SweetAlert2 comes with 5 built-in icon which will show a corresponding icon animation: <strong>warning</strong>, <strong>error</strong>, <strong>success</strong>, <strong>info</strong>, and <strong>question</strong>. It can either be put in the array under the key "icon" or passed as the third parameter of the function.</td></tr><tr id="iconColor"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#iconColor">#</a><h4>iconColor</h4><br><i>undefined</i></td><td>Use this to change the color of the icon.</td></tr><tr id="iconHtml"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#iconHtml">#</a><h4>iconHtml</h4><br><i>undefined</i></td><td>The custom HTML content for an icon.</td></tr><tr id="animation"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#animation">#</a><h4>animation</h4><br><i>true</i></td><td>If set to <strong>false</strong>, the popup animation will be disabled</td></tr><tr id="theme"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#theme">#</a><h4>theme</h4><br><i>'light'</i></td><td>Theme of the popup. <strong>'light'</strong>, <strong>'dark'</strong>, <strong>'auto'</strong>, and <strong>'borderless'</strong> for now. This is a new feature, more themes are coming. <br>Feel free to request new themes (or create your own and PR it).</td></tr><tr id="showClass"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#showClass">#</a><h4>showClass</h4><br><i><pre class=""><code data-highlighted="yes" class="hljs language-javascript">{
  <span class="hljs-attr">popup</span>: <span class="hljs-string">'swal2-show'</span>,
  <span class="hljs-attr">backdrop</span>: <span class="hljs-string">'swal2-backdrop-show'</span>,
  <span class="hljs-attr">icon</span>: <span class="hljs-string">'swal2-icon-show'</span>
}</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></i></td><td>CSS classes for animations when showing a popup (fade in)</td></tr><tr id="hideClass"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#hideClass">#</a><h4>hideClass</h4><br><i><pre class=""><code data-highlighted="yes" class="hljs language-javascript">{
  <span class="hljs-attr">popup</span>: <span class="hljs-string">'swal2-hide'</span>,
  <span class="hljs-attr">backdrop</span>: <span class="hljs-string">'swal2-backdrop-hide'</span>,
  <span class="hljs-attr">icon</span>: <span class="hljs-string">'swal2-icon-hide'</span>
}</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></i></td><td>CSS classes for animations when hiding a popup (fade out)</td></tr><tr id="footer"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#footer">#</a><h4>footer</h4><br><i>''</i></td><td>The footer of the popup. Can be either plain text or HTML.</td></tr><tr id="backdrop"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#backdrop">#</a><h4>backdrop</h4><br><i>true</i></td><td>Whether or not SweetAlert2 should show a full screen click-to-dismiss backdrop. Can be either a <strong>boolean</strong> or a <strong>string</strong> which will be assigned to the CSS <strong>background</strong> property.</td></tr><tr id="toast"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#toast">#</a><h4>toast</h4><br><i>false</i></td><td>Whether or not an alert should be treated as a toast notification. This option is normally coupled with the<strong>position</strong> parameter and a timer. Toasts are NEVER autofocused.</td></tr><tr id="target"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#target">#</a><h4>target</h4><br><i>'body'</i></td><td>The container element for adding popup into.</td></tr><tr id="input"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#input">#</a><h4>input</h4><br><i>undefined</i></td><td>Input field type, can be <strong>text</strong>, <strong>email</strong>, <strong>password</strong>, <strong>number</strong>, <strong>tel</strong>, <strong>range</strong>, <strong>textarea</strong>, <strong>search</strong>, <strong>url</strong>, <strong>select</strong>, <strong>radio</strong>, <strong>checkbox</strong>, <strong>file</strong>, <strong>date</strong>, <strong>datetime-local</strong>, <strong>time</strong>, <strong>week</strong>, <strong>month</strong>.</td></tr><tr id="width"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#width">#</a><h4>width</h4><br><i>'32em'</i></td><td>Popup window width, including paddings (<i>box-sizing: border-box</i>). Can be in any CSS unit (<strong>px</strong>, <strong>em/rem</strong>, <strong>%</strong>).</td></tr><tr id="padding"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#padding">#</a><h4>padding</h4><br><i>'0 0 1.25em'</i></td><td>Popup window padding. Can be in any CSS unit (<strong>px</strong>, <strong>em/rem</strong>, <strong>%</strong>).</td></tr><tr id="color"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#color">#</a><h4>color</h4><br><i>undefined</i></td><td>Color for title, content and footer (CSS <strong>color</strong> property). The default color is <strong>'#545454'</strong>.</td></tr><tr id="background"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#background">#</a><h4>background</h4><br><i>undefined</i></td><td>Popup window background (CSS background property). The default background is <strong>'#fff'</strong>.</td></tr><tr id="position"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#position">#</a><h4>position</h4><br><i>'center'</i></td><td>Popup window position, can be <strong>'top'</strong>, <strong>'top-start'</strong>, <strong>'top-end'</strong>, <strong>'center'</strong>, <strong>'center-start'</strong>, <strong>'center-end'</strong>, <strong>'bottom'</strong>, <strong>'bottom-start'</strong>, or <strong>'bottom-end'</strong>.</td></tr><tr id="grow"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#grow">#</a><h4>grow</h4><br><i>false</i></td><td>Paired with window position, sets the direction the popup should grow in, can be set to<strong>'row'</strong>, <strong>'column'</strong>, <strong>'fullscreen'</strong>, or <strong>false</strong>.</td></tr><tr id="customClass"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#customClass">#</a><h4>customClass</h4><br><i>undefined</i></td><td>A custom CSS class for the popup:<pre class=""><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-attr">customClass</span>: {
  <span class="hljs-attr">container</span>: <span class="hljs-string">'...'</span>,
  <span class="hljs-attr">popup</span>: <span class="hljs-string">'...'</span>,
  <span class="hljs-attr">header</span>: <span class="hljs-string">'...'</span>,
  <span class="hljs-attr">title</span>: <span class="hljs-string">'...'</span>,
  <span class="hljs-attr">closeButton</span>: <span class="hljs-string">'...'</span>,
  <span class="hljs-attr">icon</span>: <span class="hljs-string">'...'</span>,
  <span class="hljs-attr">image</span>: <span class="hljs-string">'...'</span>,
  <span class="hljs-attr">htmlContainer</span>: <span class="hljs-string">'...'</span>,
  <span class="hljs-attr">input</span>: <span class="hljs-string">'...'</span>,
  <span class="hljs-attr">inputLabel</span>: <span class="hljs-string">'...'</span>,
  <span class="hljs-attr">validationMessage</span>: <span class="hljs-string">'...'</span>,
  <span class="hljs-attr">actions</span>: <span class="hljs-string">'...'</span>,
  <span class="hljs-attr">confirmButton</span>: <span class="hljs-string">'...'</span>,
  <span class="hljs-attr">denyButton</span>: <span class="hljs-string">'...'</span>,
  <span class="hljs-attr">cancelButton</span>: <span class="hljs-string">'...'</span>,
  <span class="hljs-attr">loader</span>: <span class="hljs-string">'...'</span>,
  <span class="hljs-attr">footer</span>: <span class="hljs-string">'....'</span>,
  <span class="hljs-attr">timerProgressBar</span>: <span class="hljs-string">'....'</span>,
}</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></td></tr><tr id="timer"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#timer">#</a><h4>timer</h4><br><i>undefined</i></td><td>Auto close timer of the popup. Set in ms (milliseconds). See also <a href="https://sweetalert2.github.io/#getTimerLeft">Swal.getTimerLeft()</a>, <a href="https://sweetalert2.github.io/#stopTimer">Swal.stopTimer()</a>, <a href="https://sweetalert2.github.io/#resumeTimer">Swal.resumeTimer()</a>, <a href="https://sweetalert2.github.io/#toggleTimer">Swal.toggleTimer()</a>, <a href="https://sweetalert2.github.io/#isTimerRunning">Swal.isTimerRunning()</a> and <a href="https://sweetalert2.github.io/#increaseTimer">Swal.increaseTimer()</a>.</td></tr><tr id="timerProgressBar"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#timerProgressBar">#</a><h4>timerProgressBar</h4><br><i>false</i></td><td>If set to true, the timer will have a progress bar at the bottom of a popup. Mostly, this feature is useful with toasts.</td></tr><tr id="heightAuto"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#heightAuto">#</a><h4>heightAuto</h4><br><i>true</i></td><td>By default, SweetAlert2 sets html's and body's CSS <strong>height</strong> to <strong>auto !important</strong>. If this behavior isn't compatible with your project's layout, set <strong>heightAuto</strong> to <strong>false</strong>.</td></tr><tr id="allowOutsideClick"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#allowOutsideClick">#</a><h4>allowOutsideClick</h4><br><i>true</i></td><td>If set to <strong>false</strong>, the user can't dismiss the popup by clicking outside it.<br>You can also pass a custom function returning a boolean value, e.g. if you want to disable outside clicks for the loading state of a popup.</td></tr><tr id="allowEscapeKey"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#allowEscapeKey">#</a><h4>allowEscapeKey</h4><br><i>true</i></td><td>If set to <strong>false</strong>, the user can't dismiss the popup by pressing the <kbd>Esc</kbd> key. You can also pass a custom function returning a boolean value, e.g. if you want to disable the <kbd>Esc</kbd> key for the loading state of a popup.</td></tr><tr id="stopKeydownPropagation"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#stopKeydownPropagation">#</a><h4>stopKeydownPropagation</h4><br><i>true</i></td><td>If set to <strong>false</strong>, SweetAlert2 will allow <strong>keydown</strong> events propagation to the document.</td></tr><tr id="keydownListenerCapture"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#keydownListenerCapture">#</a><h4>keydownListenerCapture</h4><br><i>false</i></td><td>Useful for those who are using SweetAlert2 along with Bootstrap modals. By default <strong>keydownListenerCapture</strong> is <strong>false</strong> which means when a user hits <kbd>Esc</kbd>, both SweetAlert2 and Bootstrap modals will be closed. Set <strong>keydownListenerCapture</strong> to <strong>true</strong> to fix that behavior.</td></tr><tr id="showConfirmButton"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#showConfirmButton">#</a><h4>showConfirmButton</h4><br><i>true</i></td><td>If set to <strong>false</strong>, a "Confirm"-button will not be shown.</td></tr><tr id="showDenyButton"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#showDenyButton">#</a><h4>showDenyButton</h4><br><i>false</i></td><td>If set to <strong>true</strong>, a "Deny"-button will be shown. It can be useful when you want a popup with 3 buttons.</td></tr><tr id="showCancelButton"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#showCancelButton">#</a><h4>showCancelButton</h4><br><i>false</i></td><td>If set to <strong>true</strong>, a "Cancel"-button will be shown, which the user can click on to dismiss the modal.</td></tr><tr id="confirmButtonText"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#confirmButtonText">#</a><h4>confirmButtonText</h4><br><i>'OK'</i></td><td>Use this to change the text on the "Confirm"-button.</td></tr><tr id="denyButtonText"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#denyButtonText">#</a><h4>denyButtonText</h4><br><i>'No'</i></td><td>Use this to change the text on the "Deny"-button.</td></tr><tr id="cancelButtonText"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#cancelButtonText">#</a><h4>cancelButtonText</h4><br><i>'Cancel'</i></td><td>Use this to change the text on the "Cancel"-button.</td></tr><tr id="confirmButtonColor"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#confirmButtonColor">#</a><h4>confirmButtonColor</h4><br><i>undefined</i></td><td>Use this to change the background color of the "Confirm"-button. The default color is <strong>#3085d6</strong></td></tr><tr id="denyButtonColor"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#denyButtonColor">#</a><h4>denyButtonColor</h4><br><i>undefined</i></td><td>Use this to change the background color of the "Deny"-button. The default color is <strong>#dd6b55</strong></td></tr><tr id="cancelButtonColor"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#cancelButtonColor">#</a><h4>cancelButtonColor</h4><br><i>undefined</i></td><td>Use this to change the background color of the "Cancel"-button. The default color is <strong>#aaa</strong></td></tr><tr id="confirmButtonAriaLabel"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#confirmButtonAriaLabel">#</a><h4>confirmButtonAriaLabel</h4><br><i>''</i></td><td>Use this to change the <strong>aria-label</strong> for the "Confirm"-button.</td></tr><tr id="denyButtonAriaLabel"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#denyButtonAriaLabel">#</a><h4>denyButtonAriaLabel</h4><br><i>''</i></td><td>Use this to change the <strong>aria-label</strong> for the "Deny"-button.</td></tr><tr id="cancelButtonAriaLabel"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#cancelButtonAriaLabel">#</a><h4>cancelButtonAriaLabel</h4><br><i>''</i></td><td>Use this to change the <strong>aria-label</strong> for the "Cancel"-button.</td></tr><tr id="buttonsStyling"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#buttonsStyling">#</a><h4>buttonsStyling</h4><br><i>true</i></td><td>Apply default styling to buttons. If you want to use your own classes (e.g. Bootstrap classes) set this parameter to <strong>false</strong>.</td></tr><tr id="reverseButtons"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#reverseButtons">#</a><h4>reverseButtons</h4><br><i>false</i></td><td>Set to <strong>true</strong> if you want to invert default buttons positions ("Confirm"-button on the right side).</td></tr><tr id="focusConfirm"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#focusConfirm">#</a><h4>focusConfirm</h4><br><i>true</i></td><td>Set to <strong>false</strong> if you want to focus the first element in tab order instead of "Confirm"-button by default.</td></tr><tr id="returnFocus"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#returnFocus">#</a><h4>returnFocus</h4><br><i>true</i></td><td>Set to <strong>false</strong> if you don't want to return the focus to the element that invoked the modal after the modal is closed.</td></tr><tr id="focusDeny"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#focusDeny">#</a><h4>focusDeny</h4><br><i>false</i></td><td>Set to <strong>true</strong> if you want to focus the "Deny"-button by default.</td></tr><tr id="focusCancel"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#focusCancel">#</a><h4>focusCancel</h4><br><i>false</i></td><td>Set to <strong>true</strong> if you want to focus the "Cancel"-button by default.</td></tr><tr id="showCloseButton"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#showCloseButton">#</a><h4>showCloseButton</h4><br><i>false</i></td><td>Set to <strong>true</strong> to show close button in top right corner of the popup.</td></tr><tr id="closeButtonHtml"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#closeButtonHtml">#</a><h4>closeButtonHtml</h4><br><i>'&amp;times;'</i></td><td>Use this to change the content of the close button.</td></tr><tr id="closeButtonAriaLabel"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#closeButtonAriaLabel">#</a><h4>closeButtonAriaLabel</h4><br><i>'Close this dialog'</i></td><td>Use this to change the <strong>aria-label</strong> for the close button.</td></tr><tr id="loaderHtml"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#loaderHtml">#</a><h4>loaderHtml</h4><br><i>''</i></td><td>Use this to change the HTML content of the loader.</td></tr><tr id="showLoaderOnConfirm"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#showLoaderOnConfirm">#</a><h4>showLoaderOnConfirm</h4><br><i>false</i></td><td>Set to <strong>true</strong> to disable buttons and show the loader instead of the Confirm button. Use it in combination with the <a href="https://sweetalert2.github.io/#preConfirm"><strong>preConfirm</strong></a> parameter.</td></tr><tr id="showLoaderOnDeny"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#showLoaderOnDeny">#</a><h4>showLoaderOnDeny</h4><br><i>false</i></td><td>Set to <strong>true</strong> to disable buttons and show the loader instead of the Deny button. Use it in combination with the <a href="https://sweetalert2.github.io/#preDeny"><strong>preDeny</strong></a> parameter.</td></tr><tr id="scrollbarPadding"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#scrollbarPadding">#</a><h4>scrollbarPadding</h4><br><i>true</i></td><td>Set to <strong>false</strong> to disable body padding adjustment when the page scrollbar gets hidden while the popup is shown</td></tr><tr id="preConfirm"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#preConfirm">#</a><h4>preConfirm</h4><br><i>undefined</i></td><td>Function to execute before confirming, may be async (Promise-returning) or sync. <br>Returned (or resolved) value can be:<ul><li><strong>false</strong> to prevent a popup from closing</li><li>anything else to pass that value as the <strong>result.value</strong> of <strong>Swal.fire()</strong></li><li><strong>undefined</strong> to keep the default <strong>result.value</strong></li></ul>See <a href="https://sweetalert2.github.io/#ajax-request">usage example</a>.</td></tr><tr id="preDeny"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#preDeny">#</a><h4>preDeny</h4><br><i>undefined</i></td><td>Function to execute before denying, may be async (Promise-returning) or sync. <br>Returned (or resolved) value can be:<ul><li><strong>false</strong> to prevent a popup from closing</li><li>anything else to pass that value as the <strong>result.value</strong> of <strong>Swal.fire()</strong></li><li><strong>undefined</strong> to keep the default <strong>result.value</strong></li></ul></td></tr><tr id="returnInputValueOnDeny"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#returnInputValueOnDeny">#</a><h4>returnInputValueOnDeny</h4><br><i>false</i></td><td>If you want to return the input value as <strong>result.value</strong> when denying the popup, set to <strong>true</strong>. Otherwise, the denying will set <strong>result.value</strong> to <strong>false</strong>.</td></tr><tr id="imageUrl"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#imageUrl">#</a><h4>imageUrl</h4><br><i>undefined</i></td><td>Add a customized icon for the popup. Should contain a string with the path or URL to the image.</td></tr><tr id="imageWidth"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#imageWidth">#</a><h4>imageWidth</h4><br><i>undefined</i></td><td>If imageUrl is set, you can specify imageWidth to describes image width. Can be in any CSS unit (<strong>px</strong>, <strong>em/rem</strong>, <strong>%</strong>).</td></tr><tr id="imageHeight"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#imageHeight">#</a><h4>imageHeight</h4><br><i>undefined</i></td><td>Custom image height. Can be in any CSS unit (<strong>px</strong>, <strong>em/rem</strong>, <strong>%</strong>).</td></tr><tr id="imageAlt"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#imageAlt">#</a><h4>imageAlt</h4><br><i>''</i></td><td>An alternative text for the custom image icon.</td></tr><tr id="inputLabel"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#inputLabel">#</a><h4>inputLabel</h4><br><i>''</i></td><td>Input field label.</td></tr><tr id="inputPlaceholder"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#inputPlaceholder">#</a><h4>inputPlaceholder</h4><br><i>''</i></td><td>Input field placeholder.</td></tr><tr id="inputValue"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#inputValue">#</a><h4>inputValue</h4><br><i>''</i></td><td>Input field initial value. <br><br>If the input type is <strong>select</strong>, <strong>inputValue</strong> will represent the selected <strong>&lt;option&gt;</strong> tag. <br><br>If the input type is <strong>checkbox</strong>, <strong>inputValue</strong> will represent the <strong>checked</strong> state. <br><br>If the input type is <strong>email</strong>, <strong>number</strong>, <strong>tel</strong>,<strong>text</strong>, <strong>email</strong>, <strong>number</strong>, <strong>tel</strong>or <strong>textarea</strong>, a Promise can be accepted as <strong>inputValue</strong>.</td></tr><tr id="inputOptions"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#inputOptions">#</a><h4>inputOptions</h4><br><i></i></td><td>If <strong>input</strong> parameter is set to <strong>"select"</strong> or <strong>"radio"</strong>, you can provide options. Can be a Map or a plain object, with keys that represent option values and values that represent option text. You can also provide plain object or Map as values that will represented a group of options, being the label of this <strong>&lt;optgroup&gt;</strong> the key. Finally, you can also provide a Promise that resolves with one of those types.</td></tr><tr id="inputAutoFocus"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#inputAutoFocus">#</a><h4>inputAutoFocus</h4><br><i>true</i></td><td>Automatically focus the input when popup is shown. Set this parameter to <strong>false</strong> to disable auto-focusing.</td></tr><tr id="inputAutoTrim"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#inputAutoTrim">#</a><h4>inputAutoTrim</h4><br><i>true</i></td><td>Automatically remove whitespaces from both ends of a result string. Set this parameter to <strong>false</strong> to disable auto-trimming.</td></tr><tr id="inputAttributes"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#inputAttributes">#</a><h4>inputAttributes</h4><br><i></i></td><td>HTML input attributes (e.g. <strong>min</strong>, <strong>max</strong>, <strong>autocomplete</strong>, <strong>accept</strong>), that are added to the input field. Object keys will represent attributes names, object values will represent attributes values.</td></tr><tr id="inputValidator"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#inputValidator">#</a><h4>inputValidator</h4><br><i>undefined</i></td><td>Validator for input field, may be async (Promise-returning) or sync. <br>Returned (or resolved) value can be:<ul><li>a <strong>falsy</strong> value (<strong>undefined</strong>, <strong>null</strong>,<strong>false</strong>) for indicating <i>success</i></li><li>a string value (error message) for indicating <i>failure</i></li></ul>See <a href="https://sweetalert2.github.io/#input-select">usage example</a>.</td></tr><tr id="validationMessage"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#validationMessage">#</a><h4>validationMessage</h4><br><i>undefined</i></td><td>A custom validation message for default validators (email, url).</td></tr><tr id="progressSteps"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#progressSteps">#</a><h4>progressSteps</h4><br><i>[]</i></td><td>Progress steps, useful for queues.</td></tr><tr id="currentProgressStep"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#currentProgressStep">#</a><h4>currentProgressStep</h4><br><i>undefined</i></td><td>Current active progress step.</td></tr><tr id="progressStepsDistance"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#progressStepsDistance">#</a><h4>progressStepsDistance</h4><br><i>undefined</i></td><td>Distance between progress steps. Can be in any CSS unit (<strong>px</strong>, <strong>em/rem</strong>, <strong>%</strong>).</td></tr><tr id="didRender"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#didRender">#</a><h4>didRender</h4><br><i>undefined</i></td><td>Popup lifecycle hook. Synchronously runs after the popup DOM has been updated (i.e. just before the popup is repainted on the screen). <strong>didRender</strong> is called before <strong>willOpen</strong>.<br>Provides popup DOM element as the argument.<br>Typically, this will happen after <strong>Swal.fire()</strong> or <strong>Swal.update()</strong>.<br>If you want to perform changes in the popup's DOM, that survive <strong>Swal.update()</strong>, prefer<strong>didRender</strong> over <strong>willOpen</strong>.<br>In previous versions, this hook was named <strong>onRender</strong>.</td></tr><tr id="willOpen"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#willOpen">#</a><h4>willOpen</h4><br><i>undefined</i></td><td>Popup lifecycle hook. Synchronously runs before the popup is shown on screen. Provides popup DOM element as the argument. In previous versions, this hook was named <strong>onBeforeOpen</strong>.</td></tr><tr id="didOpen"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#didOpen">#</a><h4>didOpen</h4><br><i>undefined</i></td><td>Popup lifecycle hook. Asynchronously runs after the popup has been shown on screen. Provides popup DOM element as the argument. In previous versions, this hook was named <strong>onOpen</strong>.</td></tr><tr id="willClose"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#willClose">#</a><h4>willClose</h4><br><i>undefined</i></td><td>Popup lifecycle hook. Synchronously runs when the popup closes by user interaction (and not due to another popup being fired). Provides popup DOM element as the argument. In previous versions, this hook was named <strong>onClose</strong>.</td></tr><tr id="didClose"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#didClose">#</a><h4>didClose</h4><br><i>undefined</i></td><td>Popup lifecycle hook. Asynchronously runs after the popup has been disposed by user interaction (and not due to another popup being fired). In previous versions, this hook was named <strong>onAfterClose</strong>.</td></tr><tr id="didDestroy"><td><a class="hover-anchor" href="https://sweetalert2.github.io/#didDestroy">#</a><h4>didDestroy</h4><br><i>undefined</i></td><td>Popup lifecycle hook. Synchronously runs after popup has been destroyed either by user interaction or by another popup.<br>If you have cleanup operations that you need to reliably execute each time a popup is closed, prefer<strong>didDestroy</strong> over <strong>didClose</strong>.<br>In previous versions, this hook was named <strong>onDestroy</strong>.</td></tr></tbody></table><p class="center" id="mixin">You can easily reuse configuration by creating your own <strong>Swal</strong> with <strong>Swal.mixin({...options})</strong>:</p></div><ul class="examples"><li><div class="ui"><p>Mixin example</p><button class="show-example-btn" aria-label="Try me! Example: Mixin">Try me!</button></div><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-keyword">const</span> <span class="hljs-title class_">Toast</span> = <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">mixin</span>({
  <span class="hljs-attr">toast</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">position</span>: <span class="hljs-string">"top-end"</span>,
  <span class="hljs-attr">showConfirmButton</span>: <span class="hljs-literal">false</span>,
  <span class="hljs-attr">timer</span>: <span class="hljs-number">3000</span>,
  <span class="hljs-attr">timerProgressBar</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">didOpen</span>: <span class="hljs-function">(<span class="hljs-params">toast</span>) =&gt;</span> {
    toast.<span class="hljs-property">onmouseenter</span> = <span class="hljs-title class_">Swal</span>.<span class="hljs-property">stopTimer</span>;
    toast.<span class="hljs-property">onmouseleave</span> = <span class="hljs-title class_">Swal</span>.<span class="hljs-property">resumeTimer</span>;
  }
});
<span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">icon</span>: <span class="hljs-string">"success"</span>,
  <span class="hljs-attr">title</span>: <span class="hljs-string">"Signed in successfully"</span>
});</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></li></ul><div class="center-container mobile-hidden"><h3 id="declarative-templates">Declarative templates and declarative triggering</h3><p class="center">There's also the declarative way to define a popup, via the <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template" target="_blank" rel="noreferrer noopener" tabindex="-1"><strong>&lt;template&gt;</strong></a> tag. This is handy when you want to define popup on server side (SSR).</p></div><ul class="examples mobile-hidden"><li id="declarative-template"><div class="ui"><p>Declarative template example</p><button class="show-example-btn" aria-label="Try me! Example: Declarative template">Try me!</button></div><div style="display: inline-flex; flex-direction: column;"><div><template id="my-template"></template></div><pre class="" style="margin-top: 0px;"><code data-highlighted="yes" class="hljs language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"my-template"</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">swal-title</span>&gt;</span>
    Save changes to "Untitled 1" before closing?
  <span class="hljs-tag">&lt;/<span class="hljs-name">swal-title</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">swal-icon</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"warning"</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"red"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">swal-icon</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">swal-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"confirm"</span>&gt;</span>
    Save As
  <span class="hljs-tag">&lt;/<span class="hljs-name">swal-button</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">swal-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"cancel"</span>&gt;</span>
    Cancel
  <span class="hljs-tag">&lt;/<span class="hljs-name">swal-button</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">swal-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"deny"</span>&gt;</span>
    Close without Saving
  <span class="hljs-tag">&lt;/<span class="hljs-name">swal-button</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">swal-param</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"allowEscapeKey"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"false"</span> /&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">swal-param</span>
    <span class="hljs-attr">name</span>=<span class="hljs-string">"customClass"</span>
    <span class="hljs-attr">value</span>=<span class="hljs-string">'{ "popup": "my-popup" }'</span> /&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">swal-function-param</span>
    <span class="hljs-attr">name</span>=<span class="hljs-string">"didOpen"</span>
    <span class="hljs-attr">value</span>=<span class="hljs-string">"popup =&gt; console.log(popup)"</span> /&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form><pre class="code-sample" style="margin-top: 10px;"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">template</span>: <span class="hljs-string">"#my-template"</span>
});</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></div></li></ul><div class="center-container mobile-hidden"><p class="center">Supported template elements:</p><pre class=""><code data-highlighted="yes" class="hljs language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">swal-title</span>&gt;</span>…<span class="hljs-tag">&lt;/<span class="hljs-name">swal-title</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">swal-html</span>&gt;</span>…<span class="hljs-tag">&lt;/<span class="hljs-name">swal-html</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">swal-footer</span>&gt;</span>…<span class="hljs-tag">&lt;/<span class="hljs-name">swal-footer</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">swal-param</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"…"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"…"</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">swal-function-param</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"…"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"…"</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">swal-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"…"</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"…"</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">"…"</span>&gt;</span>…<span class="hljs-tag">&lt;/<span class="hljs-name">swal-button</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">swal-image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"…"</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"…"</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"…"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">"…"</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">swal-icon</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"…"</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"…"</span>&gt;</span>…<span class="hljs-tag">&lt;/<span class="hljs-name">swal-icon</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">swal-input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"…"</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"…"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"…"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"…"</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">swal-input-option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"…"</span>&gt;</span>…<span class="hljs-tag">&lt;/<span class="hljs-name">swal-input-option</span>&gt;</span></code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></div><div class="center-container mobile-hidden"><p id="declarative-triggering" class="center">And you can even trigger SweetAlert2 popups declaratively! Use the <strong>bindClickHandler()</strong> method for that:</p></div><ul class="examples mobile-hidden"><li><div class="ui"><button class="show-example-btn" data-swal-template="#my-template" style="margin: 1em 0px;">Trigger modal</button><button class="show-example-btn" data-swal-toast-template="#my-template">Trigger toast</button></div><div style="display: inline-flex; flex-direction: column;"><pre class="" style="margin-top: 0px;"><code data-highlighted="yes" class="hljs language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">data-swal-template</span>=<span class="hljs-string">"#my-template"</span>&gt;</span>
  Trigger modal
<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">data-swal-toast-template</span>=<span class="hljs-string">"#my-template"</span>&gt;</span>
  Trigger toast
<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form><pre class="code-sample" style="margin-top: 10px;"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">bindClickHandler</span>();
<span class="hljs-comment">/* Bind a mixin to a click handler */</span>
<span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">mixin</span>({
  <span class="hljs-attr">toast</span>: <span class="hljs-literal">true</span>
}).<span class="hljs-title function_">bindClickHandler</span>(<span class="hljs-string">"data-swal-toast-template"</span>);</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></div></li></ul><div class="center-container"><h3 id="handling-buttons">Handling Buttons (Confirm, Deny, Cancel)</h3><p class="center">When the user clicks a button, the Promise returned by <strong>Swal.fire()</strong> will be resolved with the <strong>SweetAlertResult</strong> object:</p><table class="dismiss-reasons"><thead><tr class="titles"><th>Key</th><th>Description</th></tr></thead><tbody><tr><td><strong>isConfirmed</strong></td><td>The "Confirm" button was clicked, the <strong>value</strong> will contain the result</td></tr><tr><td><strong>isDenied</strong></td><td>The "Deny" button was clicked, the <strong>value</strong> will be <strong>false</strong>.<br>Alternatively, if there's an input in a popup, you can use <strong>returnInputValueOnDeny: true</strong> to return the input's value.</td></tr><tr><td><strong>isDismissed</strong></td><td>The "Cancel" button was clicked, the <strong>dismiss</strong> will be<strong class="nowrap">Swal.DismissReason.cancel</strong></td></tr><tr><td><strong>value</strong></td><td>The value from the popup, possible values:<ul><li><strong>true</strong> for simple confirmed dialogs</li><li><strong>false</strong> for denied popups</li><li>any value for popups with inputs</li></ul></td></tr><tr><td><strong>dismiss</strong></td><td>The dismissal reason, see the <a href="https://sweetalert2.github.io/#handling-dismissals">Handling Dismissals</a> section for details</td></tr></tbody></table></div><div class="center-container"><h3 id="handling-dismissals">Handling Dismissals</h3><p class="center">When an alert is dismissed by the user, the Promise returned by <strong>Swal.fire()</strong> will be resolved with an object <strong class="nowrap">{ isDismissed: true, dismiss: reason }</strong> documenting the reason it was dismissed:</p><table class="dismiss-reasons"><thead><tr class="titles"><th>Reason</th><th>Description</th><th>Related configuration</th></tr></thead><tbody><tr><td><h4 class="nowrap">Swal.DismissReason.backdrop</h4></td><td>The user clicked the backdrop.</td><td><a href="https://sweetalert2.github.io/#allowOutsideClick">allowOutsideClick</a></td></tr><tr><td><h4 class="nowrap">Swal.DismissReason.cancel</h4></td><td>The user clicked the cancel button.</td><td><a href="https://sweetalert2.github.io/#showCancelButton">showCancelButton</a></td></tr><tr><td><h4 class="nowrap">Swal.DismissReason.close</h4></td><td>The user clicked the close button.</td><td><a href="https://sweetalert2.github.io/#showCloseButton">showCloseButton</a></td></tr><tr><td><h4 class="nowrap">Swal.DismissReason.esc</h4></td><td>The user clicked the <kbd>Esc</kbd> key.</td><td><a href="https://sweetalert2.github.io/#allowEscapeKey">allowEscapeKey</a></td></tr><tr><td><h4 class="nowrap">Swal.DismissReason.timer</h4></td><td>The timer ran out, and the alert closed automatically.</td><td><a href="https://sweetalert2.github.io/#timer">timer</a></td></tr></tbody></table><p class="center">If a popup is dismissed by <strong class="nowrap">Swal.close()</strong> or another popup, the Promise will be resolved with an object <strong class="nowrap">{ isDismissed: true }</strong> (<strong>dismiss</strong> will be <strong>undefined</strong>).</p></div><h3 id="icons">Icons</h3><table class="popup-icons"><tbody><tr><td><h4>success</h4></td><td><div class="swal2-icon swal2-success"><div class="swal2-success-circular-line-left"></div><span class="swal2-success-line-tip"></span> <span class="swal2-success-line-long"></span><div class="swal2-success-ring"></div><div class="swal2-success-fix"></div><div class="swal2-success-circular-line-right"></div></div></td><td><button class="show-example-btn" aria-label="Try me! Example: success modal">Try me!</button></td></tr><tr><td><h4>error</h4></td><td><div class="swal2-icon swal2-error"><span class="swal2-x-mark"><span class="swal2-x-mark-line-left"></span><span class="swal2-x-mark-line-right"></span></span></div></td><td><button class="show-example-btn" aria-label="Try me! Example: error modal">Try me!</button></td></tr><tr><td><h4>warning</h4></td><td><div class="swal2-icon swal2-warning"><div class="swal2-icon-content">!</div></div></td><td><button class="show-example-btn" aria-label="Try me! Example: warning modal">Try me!</button></td></tr><tr><td><h4>info</h4></td><td><div class="swal2-icon swal2-info"><div class="swal2-icon-content">i</div></div></td><td><button class="show-example-btn" aria-label="Try me! Example: info modal">Try me!</button></td></tr><tr><td><h4>question</h4></td><td><div class="swal2-icon swal2-question"><div class="swal2-icon-content">?</div></div></td><td><button class="show-example-btn" aria-label="Try me! Example: question modal">Try me!</button></td></tr></tbody></table><h3 id="input-types">Input Types</h3><table class="input-types"><tbody><tr id="input-text"><td><h4>text</h4></td><td><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-keyword">const</span> ipAPI = <span class="hljs-string">"//api.ipify.org?format=json"</span>;
<span class="hljs-keyword">const</span> response = <span class="hljs-keyword">await</span> <span class="hljs-title function_">fetch</span>(ipAPI);
<span class="hljs-keyword">const</span> data = <span class="hljs-keyword">await</span> response.<span class="hljs-title function_">json</span>();
<span class="hljs-keyword">const</span> inputValue = data.<span class="hljs-property">ip</span>;
<span class="hljs-keyword">const</span> { <span class="hljs-attr">value</span>: ipAddress } = <span class="hljs-keyword">await</span> <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">title</span>: <span class="hljs-string">"Enter your IP address"</span>,
  <span class="hljs-attr">input</span>: <span class="hljs-string">"text"</span>,
  <span class="hljs-attr">inputLabel</span>: <span class="hljs-string">"Your IP address"</span>,
  inputValue,
  <span class="hljs-attr">showCancelButton</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">inputValidator</span>: <span class="hljs-function">(<span class="hljs-params">value</span>) =&gt;</span> {
    <span class="hljs-keyword">if</span> (!value) {
      <span class="hljs-keyword">return</span> <span class="hljs-string">"You need to write something!"</span>;
    }
  }
});
<span class="hljs-keyword">if</span> (ipAddress) {
  <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>(<span class="hljs-string">`Your IP address is <span class="hljs-subst">${ipAddress}</span>`</span>);
}</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></td><td><button class="show-example-btn" aria-label="Try me! Example: input type text">Try me!</button></td></tr><tr id="input-email"><td><h4>email</h4></td><td><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-keyword">const</span> { <span class="hljs-attr">value</span>: email } = <span class="hljs-keyword">await</span> <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">title</span>: <span class="hljs-string">"Input email address"</span>,
  <span class="hljs-attr">input</span>: <span class="hljs-string">"email"</span>,
  <span class="hljs-attr">inputLabel</span>: <span class="hljs-string">"Your email address"</span>,
  <span class="hljs-attr">inputPlaceholder</span>: <span class="hljs-string">"Enter your email address"</span>
});
<span class="hljs-keyword">if</span> (email) {
  <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>(<span class="hljs-string">`Entered email: <span class="hljs-subst">${email}</span>`</span>);
}</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></td><td><button class="show-example-btn" aria-label="Try me! Example: input type email">Try me!</button></td></tr><tr id="input-url"><td><h4>url</h4></td><td><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-keyword">const</span> { <span class="hljs-attr">value</span>: url } = <span class="hljs-keyword">await</span> <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">input</span>: <span class="hljs-string">"url"</span>,
  <span class="hljs-attr">inputLabel</span>: <span class="hljs-string">"URL address"</span>,
  <span class="hljs-attr">inputPlaceholder</span>: <span class="hljs-string">"Enter the URL"</span>
});
<span class="hljs-keyword">if</span> (url) {
  <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>(<span class="hljs-string">`Entered URL: <span class="hljs-subst">${url}</span>`</span>);
}</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></td><td><button class="show-example-btn" aria-label="Try me! Example: input type url">Try me!</button></td></tr><tr id="input-password"><td><h4>password</h4></td><td><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-keyword">const</span> { <span class="hljs-attr">value</span>: password } = <span class="hljs-keyword">await</span> <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">title</span>: <span class="hljs-string">"Enter your password"</span>,
  <span class="hljs-attr">input</span>: <span class="hljs-string">"password"</span>,
  <span class="hljs-attr">inputLabel</span>: <span class="hljs-string">"Password"</span>,
  <span class="hljs-attr">inputPlaceholder</span>: <span class="hljs-string">"Enter your password"</span>,
  <span class="hljs-attr">inputAttributes</span>: {
    <span class="hljs-attr">maxlength</span>: <span class="hljs-string">"10"</span>,
    <span class="hljs-attr">autocapitalize</span>: <span class="hljs-string">"off"</span>,
    <span class="hljs-attr">autocorrect</span>: <span class="hljs-string">"off"</span>
  }
});
<span class="hljs-keyword">if</span> (password) {
  <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>(<span class="hljs-string">`Entered password: <span class="hljs-subst">${password}</span>`</span>);
}</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></td><td><button class="show-example-btn" aria-label="Try me! Example: input type password">Try me!</button></td></tr><tr id="input-textarea"><td><h4>textarea</h4></td><td><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-keyword">const</span> { <span class="hljs-attr">value</span>: text } = <span class="hljs-keyword">await</span> <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">input</span>: <span class="hljs-string">"textarea"</span>,
  <span class="hljs-attr">inputLabel</span>: <span class="hljs-string">"Message"</span>,
  <span class="hljs-attr">inputPlaceholder</span>: <span class="hljs-string">"Type your message here..."</span>,
  <span class="hljs-attr">inputAttributes</span>: {
    <span class="hljs-string">"aria-label"</span>: <span class="hljs-string">"Type your message here"</span>
  },
  <span class="hljs-attr">showCancelButton</span>: <span class="hljs-literal">true</span>
});
<span class="hljs-keyword">if</span> (text) {
  <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>(text);
}</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></td><td><button class="show-example-btn" aria-label="Try me! Example: input type textarea">Try me!</button></td></tr><tr id="input-select"><td><h4>select</h4></td><td><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-keyword">const</span> { <span class="hljs-attr">value</span>: fruit } = <span class="hljs-keyword">await</span> <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">title</span>: <span class="hljs-string">"Select field validation"</span>,
  <span class="hljs-attr">input</span>: <span class="hljs-string">"select"</span>,
  <span class="hljs-attr">inputOptions</span>: {
    <span class="hljs-title class_">Fruits</span>: {
      <span class="hljs-attr">apples</span>: <span class="hljs-string">"Apples"</span>,
      <span class="hljs-attr">bananas</span>: <span class="hljs-string">"Bananas"</span>,
      <span class="hljs-attr">grapes</span>: <span class="hljs-string">"Grapes"</span>,
      <span class="hljs-attr">oranges</span>: <span class="hljs-string">"Oranges"</span>
    },
    <span class="hljs-title class_">Vegetables</span>: {
      <span class="hljs-attr">potato</span>: <span class="hljs-string">"Potato"</span>,
      <span class="hljs-attr">broccoli</span>: <span class="hljs-string">"Broccoli"</span>,
      <span class="hljs-attr">carrot</span>: <span class="hljs-string">"Carrot"</span>
    },
    <span class="hljs-attr">icecream</span>: <span class="hljs-string">"Ice cream"</span>
  },
  <span class="hljs-attr">inputPlaceholder</span>: <span class="hljs-string">"Select a fruit"</span>,
  <span class="hljs-attr">showCancelButton</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">inputValidator</span>: <span class="hljs-function">(<span class="hljs-params">value</span>) =&gt;</span> {
    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {
      <span class="hljs-keyword">if</span> (value === <span class="hljs-string">"oranges"</span>) {
        <span class="hljs-title function_">resolve</span>();
      } <span class="hljs-keyword">else</span> {
        <span class="hljs-title function_">resolve</span>(<span class="hljs-string">"You need to select oranges :)"</span>);
      }
    });
  }
});
<span class="hljs-keyword">if</span> (fruit) {
  <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>(<span class="hljs-string">`You selected: <span class="hljs-subst">${fruit}</span>`</span>);
}</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></td><td><button class="show-example-btn" aria-label="Try me! Example: input type select">Try me!</button></td></tr><tr id="input-radio"><td><h4>radio</h4></td><td><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-comment">/* inputOptions can be an object or Promise */</span>
<span class="hljs-keyword">const</span> inputOptions = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {
  <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {
    <span class="hljs-title function_">resolve</span>({
      <span class="hljs-string">"#ff0000"</span>: <span class="hljs-string">"Red"</span>,
      <span class="hljs-string">"#00ff00"</span>: <span class="hljs-string">"Green"</span>,
      <span class="hljs-string">"#0000ff"</span>: <span class="hljs-string">"Blue"</span>
    });
  }, <span class="hljs-number">1000</span>);
});
<span class="hljs-keyword">const</span> { <span class="hljs-attr">value</span>: color } = <span class="hljs-keyword">await</span> <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">title</span>: <span class="hljs-string">"Select color"</span>,
  <span class="hljs-attr">input</span>: <span class="hljs-string">"radio"</span>,
  inputOptions,
  <span class="hljs-attr">inputValidator</span>: <span class="hljs-function">(<span class="hljs-params">value</span>) =&gt;</span> {
    <span class="hljs-keyword">if</span> (!value) {
      <span class="hljs-keyword">return</span> <span class="hljs-string">"You need to choose something!"</span>;
    }
  }
});
<span class="hljs-keyword">if</span> (color) {
  <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({ <span class="hljs-attr">html</span>: <span class="hljs-string">`You selected: <span class="hljs-subst">${color}</span>`</span> });
}</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></td><td><button class="show-example-btn" aria-label="Try me! Example: input type radio">Try me!</button></td></tr><tr id="input-checkbox"><td><h4>checkbox</h4></td><td><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-keyword">const</span> { <span class="hljs-attr">value</span>: accept } = <span class="hljs-keyword">await</span> <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">title</span>: <span class="hljs-string">"Terms and conditions"</span>,
  <span class="hljs-attr">input</span>: <span class="hljs-string">"checkbox"</span>,
  <span class="hljs-attr">inputValue</span>: <span class="hljs-number">1</span>,
  <span class="hljs-attr">inputPlaceholder</span>: <span class="hljs-string">`
    I agree with the terms and conditions
  `</span>,
  <span class="hljs-attr">confirmButtonText</span>: <span class="hljs-string">`
    Continue&amp;nbsp;&lt;i class="fa fa-arrow-right"&gt;&lt;/i&gt;
  `</span>,
  <span class="hljs-attr">inputValidator</span>: <span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> {
    <span class="hljs-keyword">return</span> !result &amp;&amp; <span class="hljs-string">"You need to agree with T&amp;C"</span>;
  }
});
<span class="hljs-keyword">if</span> (accept) {
  <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>(<span class="hljs-string">"You agreed with T&amp;C :)"</span>);
}</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></td><td><button class="show-example-btn" aria-label="Try me! Example: input type checkbox">Try me!</button></td></tr><tr id="input-date"><td><h4>date</h4></td><td><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-keyword">const</span> { <span class="hljs-attr">value</span>: date } = <span class="hljs-keyword">await</span> <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">title</span>: <span class="hljs-string">"select departure date"</span>,
  <span class="hljs-attr">input</span>: <span class="hljs-string">"date"</span>,
  <span class="hljs-attr">didOpen</span>: <span class="hljs-function">() =&gt;</span> {
    <span class="hljs-keyword">const</span> today = (<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>()).<span class="hljs-title function_">toISOString</span>();
    <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">getInput</span>().<span class="hljs-property">min</span> = today.<span class="hljs-title function_">split</span>(<span class="hljs-string">"T"</span>)[<span class="hljs-number">0</span>];
  }
});
<span class="hljs-keyword">if</span> (date) {
  <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>(<span class="hljs-string">"Departure date"</span>, date);
}</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></td><td><button class="show-example-btn" aria-label="Try me! Example: input type date">Try me!</button></td></tr><tr id="input-file"><td><h4>file</h4></td><td><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-keyword">const</span> { <span class="hljs-attr">value</span>: file } = <span class="hljs-keyword">await</span> <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">title</span>: <span class="hljs-string">"Select image"</span>,
  <span class="hljs-attr">input</span>: <span class="hljs-string">"file"</span>,
  <span class="hljs-attr">inputAttributes</span>: {
    <span class="hljs-string">"accept"</span>: <span class="hljs-string">"image/*"</span>,
    <span class="hljs-string">"aria-label"</span>: <span class="hljs-string">"Upload your profile picture"</span>
  }
});
<span class="hljs-keyword">if</span> (file) {
  <span class="hljs-keyword">const</span> reader = <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileReader</span>();
  reader.<span class="hljs-property">onload</span> = <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> {
    <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
      <span class="hljs-attr">title</span>: <span class="hljs-string">"Your uploaded picture"</span>,
      <span class="hljs-attr">imageUrl</span>: e.<span class="hljs-property">target</span>.<span class="hljs-property">result</span>,
      <span class="hljs-attr">imageAlt</span>: <span class="hljs-string">"The uploaded picture"</span>
    });
  };
  reader.<span class="hljs-title function_">readAsDataURL</span>(file);
}</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></td><td><button class="show-example-btn" aria-label="Try me! Example: input type file">Try me!</button></td></tr><tr id="input-range"><td><h4>range</h4></td><td><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">title</span>: <span class="hljs-string">"How old are you?"</span>,
  <span class="hljs-attr">icon</span>: <span class="hljs-string">"question"</span>,
  <span class="hljs-attr">input</span>: <span class="hljs-string">"range"</span>,
  <span class="hljs-attr">inputLabel</span>: <span class="hljs-string">"Your age"</span>,
  <span class="hljs-attr">inputAttributes</span>: {
    <span class="hljs-attr">min</span>: <span class="hljs-string">"8"</span>,
    <span class="hljs-attr">max</span>: <span class="hljs-string">"120"</span>,
    <span class="hljs-attr">step</span>: <span class="hljs-string">"1"</span>
  },
  <span class="hljs-attr">inputValue</span>: <span class="hljs-number">25</span>
});</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></td><td><button class="show-example-btn" aria-label="Try me! Example: input type range">Try me!</button></td></tr><tr id="multiple-inputs" class="mobile-hidden"><td colspan="3"><p>Multiple inputs aren't supported, you can achieve them by using <strong>html</strong> and <strong>preConfirm</strong> parameters.<br>Inside the <strong>preConfirm()</strong> function you can return (or, if async, resolve with) the custom result:</p></td></tr><tr id="multiple-inputs-example" class="mobile-hidden"><td></td><td><pre class="code-sample"><code data-highlighted="yes" class="hljs language-javascript"><span class="hljs-keyword">const</span> { <span class="hljs-attr">value</span>: formValues } = <span class="hljs-keyword">await</span> <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>({
  <span class="hljs-attr">title</span>: <span class="hljs-string">"Multiple inputs"</span>,
  <span class="hljs-attr">html</span>: <span class="hljs-string">`
    &lt;input id="swal-input1" class="swal2-input"&gt;
    &lt;input id="swal-input2" class="swal2-input"&gt;
  `</span>,
  <span class="hljs-attr">focusConfirm</span>: <span class="hljs-literal">false</span>,
  <span class="hljs-attr">preConfirm</span>: <span class="hljs-function">() =&gt;</span> {
    <span class="hljs-keyword">return</span> [
      <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">"swal-input1"</span>).<span class="hljs-property">value</span>,
      <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">"swal-input2"</span>).<span class="hljs-property">value</span>
    ];
  }
});
<span class="hljs-keyword">if</span> (formValues) {
  <span class="hljs-title class_">Swal</span>.<span class="hljs-title function_">fire</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(formValues));
}</code></pre><form action="https://codepen.io/pen/define" method="POST" target="_blank"><input type="hidden" name="data"></form></td><td><button class="show-example-btn" aria-label="Try me! Example: multiple inputs">Try me!</button></td></tr></tbody></table><div class="mobile-hidden"><h3 id="methods">Methods</h3><table><thead><tr class="titles"><th>Method</th><th>Description</th></tr></thead><tbody><tr><td><h4>Swal.isVisible()</h4></td><td>Determine if popup is shown.</td></tr><tr><td><h4>Swal.mixin({ ...options })</h4></td><td>Returns an extended version of <strong>Swal</strong> containing <strong>params</strong> as defaults. Useful for reusing Swal configuration.</td></tr><tr id="update"><td><h4>Swal.update({...options})</h4></td><td>Updates popup options.</td></tr><tr><td><h4>Swal.close()</h4></td><td>Close the currently open SweetAlert2 popup programmatically, the Promise returned by <strong>Swal.fire()</strong> will be resolved with an empty object <strong class="nowrap">{ }</strong></td></tr><tr><td><h4>Swal.getContainer()</h4></td><td>Get the popup container which contains the backdrop and the popup itself.</td></tr><tr><td><h4>Swal.getPopup()</h4></td><td>Get the popup.</td></tr><tr><td><h4>Swal.getTitle()</h4></td><td>Get the popup title.</td></tr><tr><td><h4>Swal.getProgressSteps()</h4></td><td>Get the progress steps.</td></tr><tr><td><h4>Swal.getCloseButton()</h4></td><td>Get the close button.</td></tr><tr><td><h4>Swal.getIcon()</h4></td><td>Get the <a href="https://sweetalert2.github.io/#icons">icon</a>.</td></tr><tr><td><h4>Swal.getIconContent()</h4></td><td>Get the <a href="https://sweetalert2.github.io/#icons">icon</a> content (without border).</td></tr><tr><td><h4>Swal.getHtmlContainer()</h4></td><td>Gets the DOM element where the <strong>html</strong>/<strong>text</strong> parameter is rendered to.</td></tr><tr><td><h4>Swal.getImage()</h4></td><td>Get the <a href="https://sweetalert2.github.io/#image">image</a>.</td></tr><tr><td><h4>Swal.getActions()</h4></td><td>Get the actions block (buttons container).</td></tr><tr><td><h4>Swal.getFooter()</h4></td><td>Get the popup footer.</td></tr><tr><td><h4>Swal.getFocusableElements()</h4></td><td>Get all focusable elements in the popup.</td></tr><tr id="getConfirmButton"><td><h4>Swal.getConfirmButton()</h4></td><td>Get the "Confirm" button.</td></tr><tr><td><h4>Swal.getDenyButton()</h4></td><td>Get the "Deny" button.</td></tr><tr><td><h4>Swal.getCancelButton()</h4></td><td>Get the "Cancel" button.</td></tr><tr><td><h4>Swal.enableButtons()</h4></td><td>Enable "Confirm" and "Cancel" buttons.</td></tr><tr><td><h4>Swal.disableButtons()</h4></td><td>Disable "Confirm" and "Cancel" buttons.</td></tr><tr id="showLoading"><td><h4>Swal.showLoading()</h4></td><td>Shows loader (spinner), this is useful with AJAX requests.<br><br>By default the loader be shown instead of the "Confirm" button, but if you want another button to be replaced with a loader, just pass it like this: <strong class="nowrap">Swal.showLoading(Swal.getDenyButton())</strong></td></tr><tr id="hideLoading"><td><h4>Swal.hideLoading()</h4></td><td>Hides loader and shows back the button which was hidden by .showLoading()</td></tr><tr><td><h4>Swal.isLoading()</h4></td><td>Determine if popup is in the loading state. Related methods: <a href="https://sweetalert2.github.io/#showLoading" class="nowrap">Swal.showLoading()</a> and <a href="https://sweetalert2.github.io/#hideLoading" class="nowrap">Swal.hideLoading()</a></td></tr><tr id="getTimerLeft"><td><h4>Swal.getTimerLeft()</h4></td><td>Returns the time left in case when <a href="https://sweetalert2.github.io/#timer">timer</a> parameter is set.</td></tr><tr id="stopTimer"><td><h4>Swal.stopTimer()</h4></td><td>Stops the timer in case when <a href="https://sweetalert2.github.io/#timer">timer</a> parameter is set. Returns the time left</td></tr><tr id="resumeTimer"><td><h4>Swal.resumeTimer()</h4></td><td>Resume the <a href="https://sweetalert2.github.io/#timer">timer</a> previously stopped. Returns the time left</td></tr><tr id="toggleTimer"><td><h4>Swal.toggleTimer()</h4></td><td>Toggle state of the <a href="https://sweetalert2.github.io/#timer">timer</a> between stopped and running. Returns the time left</td></tr><tr id="isTimerRunning"><td><h4>Swal.isTimerRunning()</h4></td><td>Returns the status of a <a href="https://sweetalert2.github.io/#timer">timer</a>: <strong>true</strong> if is running, <strong>false</strong> if it's paused</td></tr><tr id="increaseTimer"><td><h4>Swal.increaseTimer(ms)</h4></td><td>Increase the <a href="https://sweetalert2.github.io/#timer">timer</a> by <strong>ms</strong> milliseconds. Returns the time left</td></tr><tr><td><h4>Swal.clickConfirm()</h4></td><td>Click the "Confirm"-button programmatically.</td></tr><tr><td><h4>Swal.clickDeny()</h4></td><td>Click the "Deny"-button programmatically.</td></tr><tr><td><h4>Swal.clickCancel()</h4></td><td>Click the "Cancel"-button programmatically.</td></tr><tr><td><h4>Swal.getInput()</h4></td><td>Get the input DOM node, this method works with <a href="https://sweetalert2.github.io/#input">input parameter</a>.</td></tr><tr><td><h4>Swal.disableInput()</h4></td><td>Disable input. A disabled input element is unusable and un-clickable.</td></tr><tr><td><h4>Swal.enableInput()</h4></td><td>Enable input.</td></tr><tr id="showValidationMessage"><td><h4>Swal.showValidationMessage(message)</h4></td><td>Show the validation message DOM node.</td></tr><tr><td><h4>Swal.resetValidationMessage()</h4></td><td>Hide the validation message DOM node.</td></tr><tr><td><h4>Swal.getValidationMessage()</h4></td><td>Get the validation message DOM node.</td></tr><tr><td><h4>Swal.isValidParameter(param)</h4></td><td>Determine if parameter name is valid.</td></tr><tr><td><h4>Swal.isUpdatableParameter(param)</h4></td><td>Determine if parameter name is valid for <a href="https://sweetalert2.github.io/#update">Swal.update()</a> method.</td></tr></tbody></table></div><h3 id="sponsors">Sponsors</h3><p class="center">For all questions related to sponsorship please contact me via email <a href="mailto:sweetalert2@gmail.com">sweetalert2@gmail.com</a></p><div class="sponsors" style="margin-top: -1.8em;"><div><a href="https://github.com/sweetalert2/sweetalert2/blob/main/SPONSORS.md#sponsors" target="_blank" rel="noopener" aria-label="Add your logo and link here"><img alt="" src="./sweetalert2.min_files/plus.png"><br>Add your logo and link<br>for $29 per month</a></div></div><div class="sponsors"><div><a href="https://www.inksonic.com/" target="_blank" rel="noopener" aria-label="InkSonic"><img alt="InkSonic" src="./sweetalert2.min_files/inksonic.png"><br>InkSonic</a></div><div><a href="https://bluehive.com/?utm_source=sweetalert2&amp;utm_medium=sponsored&amp;utm_campaign=listing" target="_blank" rel="noopener" aria-label="Your Occupational Healthcare Hub"><img alt="Your Occupational Healthcare Hub" src="./sweetalert2.min_files/bluehive.png"><br>Your Occupational Healthcare Hub</a></div><div><a href="https://boilerplatehub.com/?utm_source=sweetalert2" target="_blank" rel="noopener" aria-label="Build your SaaS or App in days, not weeks"><img alt="Build your SaaS or App in days, not weeks" src="./sweetalert2.min_files/boilerplatehub.jpg"><br>Build your SaaS or App in days</a></div><div><a href="https://ssmarket.net/buy-youtube-views" target="_blank" rel="noopener" aria-label="Buy Youtube Views"><img alt="Buy Youtube Views" src="./sweetalert2.min_files/ssmarket.png"><br>Buy Youtube Views</a></div><div><a href="https://www.coinbit.fi/" target="_blank" rel="noopener" aria-label="Kryptovaluutat"><img alt="Kryptovaluutat" src="./sweetalert2.min_files/coinbit.png"><br>Kryptovaluutat</a></div><div><a href="https://dlxplugins.com/" target="_blank" rel="noopener" aria-label="DLX Plugins"><img alt="DLX Plugins" src="./sweetalert2.min_files/106675919"><br>DLX Plugins</a></div><div><a href="https://github.com/tiagostutz" target="_blank" rel="noopener" aria-label="Tiago de Oliveira Stutz"><img alt="Tiago de Oliveira Stutz" src="./sweetalert2.min_files/3986989"><br>Tiago de Oliveira Stutz</a></div><div><a href="https://istar.tips/" target="_blank" rel="noopener" aria-label="iStarTips"><img alt="iStarTips" src="./sweetalert2.min_files/istartips.png"><br>iStarTips</a></div><div><a href="https://roboflow.com/" target="_blank" rel="noopener" aria-label="Roboflow"><img alt="Roboflow" src="./sweetalert2.min_files/roboflow.png"><br>Roboflow</a></div><div><a href="https://www.zezelife.com/" target="_blank" rel="noopener" aria-label="ZezeLife"><img alt="ZezeLife" src="./sweetalert2.min_files/zezelife.png"><br>ZezeLife</a></div><div><a href="https://realspyapps.com/" target="_blank" rel="noopener" aria-label="Real Spy Apps"><img alt="Real Spy Apps" src="./sweetalert2.min_files/realspyapps.jpeg"><br>Real Spy Apps</a></div><div><a href="https://celltrackingapps.com/" target="_blank" rel="noopener" aria-label="Phone Tracking Apps"><img alt="Phone Tracking Apps" src="./sweetalert2.min_files/celltrackingapps.png"><br>Phone Tracking Apps</a></div></div><h3 id="nsfw-sponsors">NSFW Sponsors</h3><p class="center">For all questions related to sponsorship please contact me via email <a href="mailto:sweetalert2@gmail.com">sweetalert2@gmail.com</a></p><div class="sponsors" style="margin-top: -1.8em;"><div><a href="https://github.com/sweetalert2/sweetalert2/blob/main/SPONSORS.md#sponsors" target="_blank" rel="noopener" aria-label="Add your logo and link here"><img alt="" src="./sweetalert2.min_files/plus.png"><br>Add your logo and link<br>for $29 per month</a></div></div><div class="sponsors"><div><a href="https://www.xndoll.com/" target="_blank" rel="noopener" aria-label="XNDOLL"><img alt="XNDOLL" src="./sweetalert2.min_files/xndoll.png"><br>XNDOLL</a></div><div><a href="https://www.pidoll.com/" target="_blank" rel="noopener" aria-label="PIDOLL"><img alt="PIDOLL" src="./sweetalert2.min_files/pidoll.png"><br>PIDOLL</a></div><div><a href="https://www.fantasywives.com/cheap-sex-dolls/" target="_blank" rel="noopener" aria-label="Cheap sex dolls"><img alt="Cheap sex dolls" src="./sweetalert2.min_files/fantasywives.png"><br>Cheap sex dolls</a></div><div><a href="https://tabootwin.com/?utm_source=sweetalert" target="_blank" rel="noopener" aria-label="TabooTwin AI Girlfriend"><img alt="TabooTwin AI Girlfriend" src="./sweetalert2.min_files/tabootwin.png"><br>TabooTwin <br> AI Girlfriend</a></div><div><a href="https://huntlocals.com/" target="_blank" rel="noopener" aria-label="HuntLocals"><img alt="HuntLocals" src="./sweetalert2.min_files/huntlocals.png"><br>HuntLocals</a></div><div><a href="https://siteshartbandi.co/" target="_blank" rel="noopener" aria-label="سایت شرط بندی"><img alt="سایت شرط بندی" src="./sweetalert2.min_files/siteshartbandi.png"><br><span dir="rtl">سایت شرط بندی</span></a></div><div><a href="https://www.sosexdoll.com/cheap-sex-doll" target="_blank" rel="noopener" aria-label="SoSexDoll"><img alt="SoSexDoll" src="./sweetalert2.min_files/sosexdoll.png"><br>SoSexDoll</a></div><div><a href="https://aeroescorts.com/" target="_blank" rel="noopener" aria-label="AeroEscorts"><img alt="AeroEscorts" src="./sweetalert2.min_files/aeroescorts.png"><br>AeroEscorts</a></div><div><a href="https://www.hismith.co.uk/" target="_blank" rel="noopener" aria-label="Hismith"><img alt="Hismith" src="./sweetalert2.min_files/hismith.png"><br>Hismith</a></div><div><a href="https://dollauthority.com/" target="_blank" rel="noopener" aria-label="Doll Authority"><img alt="Doll Authority" src="./sweetalert2.min_files/dollauthority.png"><br>Doll Authority</a></div><div><a href="https://dreamlovedoll.com/" target="_blank" rel="noopener" aria-label="DreamLoveDoll"><img alt="DreamLoveDoll" src="./sweetalert2.min_files/dreamlovedoll.jpg"><br>DreamLoveDoll</a></div><div><a href="https://www.sexdollpartner.com/" target="_blank" rel="noopener" aria-label="SexDollPartner"><img alt="SexDollPartner" src="./sweetalert2.min_files/sexdollpartner.jpg"><br>SexDollPartner</a></div><div><a href="https://www.xspacecup.com/" target="_blank" rel="noopener" aria-label="XspaceCup - Top Male Masturbator Brand"><img alt="XspaceCup - Top Male Masturbator Brand" src="./sweetalert2.min_files/xspacecup.png"><br>XspaceCup - Top Male Masturbator Brand</a></div><div><a href="https://sexsitoys.com/lovense-games/" target="_blank" rel="noopener" aria-label="Sexsi Toys"><img alt="Sexsi Toys" src="./sweetalert2.min_files/sexsitoys.jpg"><br>Sexsi Toys</a></div><div><a href="https://www.cheapestsexdolls.com/" target="_blank" rel="noopener" aria-label="CheapestSexDolls"><img alt="CheapestSexDolls" src="./sweetalert2.min_files/cheapestsexdolls.png"><br>CheapestSexDolls</a></div><div><a href="https://www.nakedoll.com/" target="_blank" rel="noopener" aria-label="NakeDoll"><img alt="NakeDoll" src="./sweetalert2.min_files/nakedoll.png"><br>NakeDoll</a></div><div><a href="https://www.onahole.com/" target="_blank" rel="noopener" aria-label="hentai sex toys"><img alt="hentai sex toys" src="./sweetalert2.min_files/onahole.png"><br>hentai sex toys</a></div><div><a href="https://vsdoll.net/" target="_blank" rel="noopener" aria-label="VSDoll"><img alt="VSDoll" src="./sweetalert2.min_files/vsdoll.png"><br>VSDoll</a></div><div><a href="https://www.sextorso.com/" target="_blank" rel="noopener" aria-label="sexdoll torso"><img alt="sexdoll torso" src="./sweetalert2.min_files/sextorso.png"><br>sexdoll torso</a></div><div><a href="https://www.minisexdoll.com/anime-sexdoll/" target="_blank" rel="noopener" aria-label="anime sexdoll"><img alt="anime sexdoll" src="./sweetalert2.min_files/minisexdoll.png"><br>anime sexdoll</a></div><div><a href="https://www.myminisexdoll.com/under-300/" target="_blank" rel="noopener" aria-label="cheap sexdoll"><img alt="cheap sexdoll" src="./sweetalert2.min_files/myminisexdoll.png"><br>cheap sexdoll</a></div><div><a href="https://www.hugedildo.com/" target="_blank" rel="noopener" aria-label="huge dildo"><img alt="huge dildo" src="./sweetalert2.min_files/hugedildo.png"><br>huge dildo</a></div><div><a href="https://www.uusexdoll.com/" target="_blank" rel="noopener" aria-label="sexdoll"><img alt="sexdoll" src="./sweetalert2.min_files/uusexdoll.png"><br>sexdoll</a></div><div><a href="https://cutesexdoll.com/" target="_blank" rel="noopener" aria-label="Cute Sex Doll"><img alt="Cute Sex Doll" src="./sweetalert2.min_files/cutesexdoll.jpg"><br>Cute Sex Doll</a></div><div><a href="https://www.uusextoy.com/best-pocket-pussy/" target="_blank" rel="noopener" aria-label="best pocket pussy"><img alt="best pocket pussy" src="./sweetalert2.min_files/uusextoy.png"><br>best pocket pussy</a></div><div><a href="https://www.lovedolltorso.com/female-torso-sex-doll/" target="_blank" rel="noopener" aria-label="female torso sex doll"><img alt="female torso sex doll" src="./sweetalert2.min_files/lovedolltorso.png"><br>female torso sex doll</a></div><div><a href="https://www.mymasturbators.com/" target="_blank" rel="noopener" aria-label="male masturbator"><img alt="male masturbator" src="./sweetalert2.min_files/mymasturbators.png"><br>male masturbator</a></div><div><a href="https://www.buypenispump.com/" target="_blank" rel="noopener" aria-label="penis pump"><img alt="penis pump" src="./sweetalert2.min_files/buypenispump.png"><br>penis pump</a></div><div><a href="https://www.bestrealdoll.com/collections/us-warehouse" target="_blank" rel="noopener" aria-label="BestRealDoll"><img alt="BestRealDoll" src="./sweetalert2.min_files/bestrealdoll.jpeg"><br>BestRealDoll</a></div><div><a href="https://www.sexdolltech.com/product-category/us-warehouse/" target="_blank" rel="noopener" aria-label="SexDollTech"><img alt="SexDollTech" src="./sweetalert2.min_files/sexdolltech.jpeg"><br>SexDollTech</a></div><div><a href="https://www.sexdollsoff.com/" target="_blank" rel="noopener" aria-label="SexDollsOff"><img alt="YourDoll" src="./sweetalert2.min_files/sexdollsoff.png"><br>SexDollsOff</a></div><div><a href="https://realsexdoll.com/" target="_blank" rel="noopener" aria-label="RealSexDoll"><img alt="YourDoll" src="./sweetalert2.min_files/realsexdoll.png"><br>RealSexDoll</a></div><div><a href="https://www.yourdoll.com/" target="_blank" rel="noopener" aria-label="YourDoll"><img alt="YourDoll" src="./sweetalert2.min_files/yourdoll.jpg"><br>YourDoll</a></div><div><a href="https://anniesdollhouse.com/" target="_blank" rel="noopener" aria-label="Annie&#39;s Dollhouse"><img alt="Annie&#39;s Dollhouse" src="./sweetalert2.min_files/annies-dollhouse.png"><br>Annie's Dollhouse</a></div><div><a href="https://sextoycollective.com/" target="_blank" rel="noopener" aria-label="STC"><img alt="STC" src="./sweetalert2.min_files/sextoycollective.jpg"><br>STC</a></div><div><a href="https://doctorclimax.com/" target="_blank" rel="noopener" aria-label="DoctorClimax" title="DoctorClimax"><img alt="DoctorClimax" src="./sweetalert2.min_files/doctorclimax.png"><br>DoctorClimax</a></div><div><a href="https://www.bsdoll.com/" target="_blank" rel="noopener" aria-label="BSDoll"><img alt="BSDoll" src="./sweetalert2.min_files/bsdoll.jpg"><br>BSDoll</a></div></div></div>
    <div id="rtl-container" dir="rtl"></div>
  

</body></html>